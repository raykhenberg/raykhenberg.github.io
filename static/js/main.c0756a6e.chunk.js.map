{"version":3,"sources":["constants.js","fns.js","App.js","serviceWorker.js","index.js"],"names":["constants","ALLOCATION_TYPES","MANUAL","MIN_REGRET","MIN_TIME","CHART_LABELS","_CHART_LABELS","Object","defineProperty","roundDist","distribution","map","value","parseInt","fns","getConfidenceNumbers","jsonFile","variations","trafficAllocation","length","confidences","pValues","Array","fill","confidenceIntervals","Infinity","forEach","visitor","push","values","stats","statObject","pValue","confInterval","getCounts","visitorCounts","conversions","visitors","summaryObject","_","cloneDeep","variation","convert","getDistributions","sampleRate","arguments","undefined","initialPoints","distributions","index","visitorIndex","roundedDist","DistributionChart","getDistributionData","_this$props","_this","props","position","series","name","concat","data","slice","animation","duration","_this$props2","this","chartRef","policy","config","credits","enabled","plotOptions","line","marker","title","text","xAxis","labels","formatter","min","max","yAxis","react_default","a","createElement","className","ReactHighcharts_default","ref","Component","VariationCard","_this$props3","color","conversionCount","visitorCount","toFixed","StatSigCard","formatPValue","_this2","_this$props4","classNames","SummaryCard","getVisitorCount","_this3$props","_this3","counts","getConversionCount","_this3$props2","getPValue","_this3$props3","isBetterThanBaseline","baselineConversionRate","variationConversionRate","Number","isNaN","renderVariationCards","conversionTotal","visitorTotal","App_VariationCard","key","renderStatSigCards","App_StatSigCard","_this$props5","hideGraphs","border--left","flex","flex-align--center","flex--column","soft","style","minWidth","App","_this4","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","currentPosition","enabledCharts","interval","isRunning","marks","multiplier","getNextSignificantPoint","_this4$state","significantPoints","keys","filter","mark","getPreviousSignificantPoint","_this4$state2","toggleSeries","chartRefs","current","chart","visible","hide","show","handleKeyDown","event","keyCode","preventDefault","stopCounting","startCounting","toggleChart","target","setCurrentPosition","maxVisitors","toggleCharts","reset","isChartEnabled","chartType","includes","setState","setTimelineMarks","0","label","20000","startInterval","setInterval","_previousState","clearInterval","charts","type","previousState","window","uniform","minRegretDistributions","minRegret","minTimeDistributions","minTime","uniformDistributions","minRegretCounts","minTimeCounts","uniformCounts","minRegretConfidences","minTimeConfidences","uniformConfidences","Math","minRegretVariations","minTimeVariations","uniformVariations","minRegretRef","React","createRef","minTimeRef","uniformRef","document","addEventListener","push-double--right","checked","id","onChange","htmlFor","onClick","dist_default","size","es","dots","flex--row","flex-justify--center","flex--space","App_DistributionChart","App_SummaryCard","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c0756a6e.chunk.js","sourcesContent":["export const MANUAL = 'MANUAL';\nexport const MIN_REGRET = 'MIN_REGRET'; // Accelerated Impact\nexport const MIN_TIME = 'MIN_TIME'; // Accelerated Learning\n\nexport const ALLOCATION_TYPES = {\n  MANUAL,\n  MIN_REGRET,\n  MIN_TIME,\n}\n\nexport const CHART_LABELS = {\n  [MANUAL]: 'Standard A/B',\n  [MIN_REGRET]: 'Min Regret (Accelerated Impact)',\n  [MIN_TIME]: 'Min Time (Accelerated Learning)',\n}\n\nexport default {\n  ALLOCATION_TYPES,\n  CHART_LABELS,\n  MANUAL,\n  MIN_REGRET,\n  MIN_TIME,\n};\n","import _ from 'lodash';\n\nconst roundDist = (distribution) => {\n  return distribution.map((value) => {\n    return parseInt(value * 10000) / 100;\n  });\n}\n\nexport const getConfidenceNumbers = (jsonFile) => {\n\n  const variations = jsonFile[0].trafficAllocation.length - 1;\n  const confidences = [\n    {\n      pValues: Array(variations).fill(1),\n      confidenceIntervals: Array(variations).fill([-Infinity, Infinity]),\n    }\n  ];\n\n  jsonFile.forEach((visitor) => {\n    confidences.push({\n      pValues: Object.values(visitor.stats).map((statObject) => statObject.pValue),\n      confidenceIntervals: Object.values(visitor.stats).map((statObject) => statObject.confInterval),\n    });\n  });\n\n  return confidences;\n};\n\nexport const getCounts = (jsonFile) => {\n  const variations = jsonFile[0].trafficAllocation.length;\n  const visitorCounts = [{\n    conversions: Array(variations).fill(0),\n    visitors: Array(variations).fill(0),\n  }];\n\n  jsonFile.forEach((visitor) => {\n    const summaryObject = _.cloneDeep(visitorCounts[visitorCounts.length - 1]); \n    summaryObject.visitors[visitor.variation] = summaryObject.visitors[visitor.variation] + 1;\n    if (visitor.convert) {\n      summaryObject.conversions[visitor.variation] = summaryObject.conversions[visitor.variation] + 1;\n    }\n    visitorCounts.push(summaryObject);\n  });\n\n  return visitorCounts;\n};\n\nexport const getDistributions = (jsonFile, sampleRate = 1) => {\n  const variations = Array(jsonFile[0].trafficAllocation.length).fill([]);\n  const initialPoints = roundDist(_.cloneDeep(jsonFile[0].trafficAllocation));\n  const distributions = [];\n  variations.forEach((variation, index) => {\n    distributions[index] = [initialPoints[index]];\n  });\n\n  jsonFile.forEach((visitor, visitorIndex) => {\n    const roundedDist = roundDist(visitor.trafficAllocation);\n    variations.forEach((variation, index) => {\n      if (!(visitorIndex % sampleRate)) {\n        distributions[index].push(roundedDist[index]);\n      }\n    });\n  });\n\n  return distributions;\n};\n\nexport default {\n  getConfidenceNumbers,\n  getCounts,\n  getDistributions,\n};\n","import _ from 'lodash';\nimport classNames from 'class-names';\nimport React, { Component } from 'react';\nimport './App.css';\nimport ReactHighcharts from 'react-highcharts';\nimport Slider from 'rc-slider';\nimport Icon from 'react-oui-icons';\n\nimport constants from './constants';\nimport fns from './fns';\n\nimport 'rc-slider/assets/index.css';\n\nclass DistributionChart extends Component {\n  getDistributionData = () => {\n    const {\n      distributions,\n      position,\n      sampleRate,\n      variations,\n    } = this.props;\n\n    const series = [];\n    \n    Array(variations).fill(1).forEach((value, index) => {\n      series.push({\n        name: !!index ? `Variation ${index}` : 'Original',\n        data: distributions[index].slice(0, parseInt(position / sampleRate)),\n        animation: {\n          duration: 0,\n        },\n      })\n    });\n\n    return _.cloneDeep(series);\n  }\n\n  render() {\n    const {\n      chartRef,\n      distributions,\n      policy,\n      sampleRate,\n    } = this.props;\n\n    const config = {\n      credits: {\n        enabled: false,\n      },\n      plotOptions: {\n        line: {\n          marker: {\n            enabled: false,\n          },\n        },\n      },\n      series: this.getDistributionData(),\n      title: {\n        text: constants.CHART_LABELS[policy],\n      },\n      xAxis: {\n        labels: {\n          formatter: function() {\n            return this.value * sampleRate;\n          }\n        },\n        min: 0,\n        max: parseInt(distributions[0].length),\n      },\n      yAxis: {\n        title: {\n          text: 'Distribution',\n        },\n      },\n    }\n\n    return (\n      <div className=\"flex--1\">\n        <ReactHighcharts\n          config={ config }\n          ref={ chartRef }\n        />\n      </div>\n    );\n  }\n}\n\nclass VariationCard extends Component {\n  render() {\n    const {\n      color,\n      conversionCount,\n      title,\n      visitorCount,\n    } = this.props;\n\n    return (\n      <div\n        className=\"flex flex--column flex-align--center soft--sides\">\n        <h5>\n          { title }\n        </h5>\n        <p className=\"micro muted\">\n          Conversions\n        </p>\n        <h3 className={ `${color}` }>\n          { conversionCount }\n        </h3>\n        <p className=\"micro muted\">\n          Visitors\n        </p>\n        <h3 className={ `${color}` }>\n          { visitorCount }\n        </h3>\n        <p className=\"micro muted\">\n          Conversion Rate\n        </p>\n        <h3 className={ `${color}` }>\n          { `${visitorCount ? ((conversionCount / visitorCount) * 100).toFixed(2) : '0.00'}%` }\n        </h3>\n      </div>\n    )\n  }\n}\n\nclass StatSigCard extends Component {\n  formatPValue = () => {\n    const { pValue } = this.props;\n\n    return `${ ((1 - pValue) * 100).toFixed(2) }%`;\n  }\n\n  render() {\n    const {\n      color,\n      pValue,\n      title,\n    } = this.props;\n\n    return (\n      <div className=\"flex flex--column flex-align--center soft--sides width--50\">\n        <h5>\n          { title }\n        </h5>\n        <h3 className={ classNames({\n          [color]: pValue <= 0.10\n        }) }>\n          { this.formatPValue() }\n        </h3>\n      </div>\n    );\n  }\n}\n\nclass SummaryCard extends Component {\n  getVisitorCount = (variation) => {\n    const {\n      counts,\n      position,\n    } = this.props;\n\n    return counts[position].visitors[variation];\n  }\n\n  getConversionCount = (variation) => {\n    const {\n      counts,\n      position,\n    } = this.props;\n\n    return counts[position].conversions[variation];\n  }\n\n  getPValue = (variation) => {\n    const {\n      confidences,\n      position,\n    } = this.props;\n\n    return confidences[position].pValues[variation];\n  }\n\n  isBetterThanBaseline = (variation) => {\n    const baselineConversionRate = this.getConversionCount(0) / this.getVisitorCount(0);\n    const variationConversionRate = this.getConversionCount(variation) / this.getVisitorCount(variation);\n    return Number.isNaN(baselineConversionRate) || Number.isNaN(variationConversionRate) ? false : variationConversionRate > baselineConversionRate;\n  };\n\n  renderVariationCards = () => {\n    const { variations } = this.props;\n\n    let conversionTotal = 0;\n    let visitorTotal = 0;\n\n    return Array(variations + 1).fill(1).map((value, index) => {\n      if (index < variations) {\n        conversionTotal += this.getConversionCount(index);\n        visitorTotal += this.getVisitorCount(index);\n      }\n      if (!index) {\n        return (\n          <VariationCard\n            color=\"black\"\n            conversionCount={ this.getConversionCount(0) }\n            key={ index }\n            title=\"Original\"\n            visitorCount={ this.getVisitorCount(0) }\n          />\n        );\n      } else if (index === variations) {\n        return (\n          <VariationCard\n            color=\"black\"\n            conversionCount={ conversionTotal }\n            key={ index }\n            title=\"Total\"\n            visitorCount={ visitorTotal }\n          />\n        );\n      } else {\n        return (\n          <VariationCard \n            color={ this.getPValue(index - 1) <= 0.10 ? this.isBetterThanBaseline(index) ? 'green' : 'red' : 'black' }\n            conversionCount={ this.getConversionCount(index) }\n            key={ index }\n            title={ `Variation ${index}` }\n            visitorCount={ this.getVisitorCount(index) }\n          />\n        );\n      }\n    });\n  };\n\n  renderStatSigCards = () => {\n    const { variations } = this.props;\n\n    return Array(variations - 1).fill(1).map((value, index) => {\n      return (\n        <StatSigCard\n          color={ this.isBetterThanBaseline(index + 1) ? 'green' : 'red' }\n          key={ index }\n          pValue={ this.getPValue(index) }\n          title={ `Variation ${index + 1}` }\n        />\n      )\n    });\n  };\n\n  render() {\n    const { hideGraphs, policy, variations } = this.props;\n    return (\n      <div\n        className={ classNames({\n          \"border--left\": !hideGraphs,\n          \"flex\": true,\n          \"flex-align--center\": true,\n          \"flex--column\": true,\n          \"soft\": hideGraphs,\n        }) }\n        style={ {\n          minWidth: `${125 * variations}px`,\n        } }\n      >\n        { hideGraphs && (\n          <h1>{ constants.CHART_LABELS[policy] }</h1>\n        ) }\n        <div className=\"flex flex--row flex--space width--100\">\n          { this.renderVariationCards() }\n        </div>\n        <h4 className=\"flex\">\n          Statistical Significance:\n        </h4>\n        <div className=\"flex flex--row flex--space width--100\">\n          { this.renderStatSigCards() }\n        </div>\n      </div>\n    )\n  }\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.sampleRate = window.uniform.length / 500;\n    this.minRegretDistributions = fns.getDistributions(window.minRegret, this.sampleRate);\n    this.minTimeDistributions = fns.getDistributions(window.minTime, this.sampleRate);\n    this.uniformDistributions = fns.getDistributions(window.uniform, this.sampleRate);\n    this.minRegretCounts = fns.getCounts(window.minRegret);\n    this.minTimeCounts = fns.getCounts(window.minTime);\n    this.uniformCounts = fns.getCounts(window.uniform);\n    this.minRegretConfidences = fns.getConfidenceNumbers(window.minRegret);\n    this.minTimeConfidences = fns.getConfidenceNumbers(window.minTime);\n    this.uniformConfidences = fns.getConfidenceNumbers(window.uniform);\n    this.maxVisitors = Math.max(window.minRegret.length, window.minTime.length, window.uniform.length);\n    this.minRegretVariations = window.minRegret[0].trafficAllocation.length;\n    this.minTimeVariations = window.minTime[0].trafficAllocation.length;\n    this.uniformVariations = window.uniform[0].trafficAllocation.length;\n    this.chartRefs = {\n      minRegretRef: React.createRef(),\n      minTimeRef: React.createRef(),\n      uniformRef: React.createRef(),\n    }\n  }\n\n  state = {\n    currentPosition: 0,\n    enabledCharts: [constants.MANUAL],\n    hideGraphs: false,\n    interval: null,\n    isRunning: false,\n    marks: {},\n    multiplier: 100,\n  };\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKeyDown);\n    this.setTimelineMarks();\n  }\n\n  getNextSignificantPoint = () => {\n    const {\n      currentPosition,\n      marks,\n    } = this.state;\n    const significantPoints = Object.keys(marks).filter(mark => mark > currentPosition);\n    return significantPoints.length ? Number(significantPoints[0]) : currentPosition;\n  };\n\n  getPreviousSignificantPoint = () => {\n    const {\n      currentPosition,\n      marks,\n    } = this.state;\n    const significantPoints = Object.keys(marks).filter(mark => mark < currentPosition);\n    return significantPoints.length ? Number(significantPoints[significantPoints.length - 1]) : currentPosition;\n  }\n\n  toggleSeries = (index) => {\n    Object.values(this.chartRefs).forEach((ref) => {\n      if (ref.current && ref.current.chart.series[index].visible) {\n        ref.current.chart.series[index].hide();\n      } else if (ref.current && !ref.current.chart.series[index].visible) {\n        ref.current.chart.series[index].show();\n      }\n    });\n  }\n\n  handleKeyDown = (event) => {\n    switch( event.keyCode ) {\n      case 32:\n        event.preventDefault();\n        if (this.state.isRunning) {\n          this.stopCounting();\n        } else {\n          this.startCounting();\n        }\n        break;\n      case 48:\n        this.toggleSeries(0);\n        break;\n      case 49:\n        this.toggleSeries(1);\n        break;\n      case 50:\n        this.toggleSeries(2);\n        break;\n      case 51:\n        this.toggleSeries(3);\n        break;\n      case 65:\n        this.toggleChart({ target: { value: constants.MANUAL } });\n        break;\n      case 69:\n        this.stopCounting();\n        this.setCurrentPosition(this.maxVisitors);\n        break;\n      case 71:\n        this.toggleCharts();\n        break;\n      case 73:\n        this.toggleChart({ target: { value: constants.MIN_REGRET } });\n        break;\n      case 76:\n        this.toggleChart({ target: { value: constants.MIN_TIME } });\n        break;\n      case 78:\n        this.stopCounting();\n        this.setCurrentPosition(this.getNextSignificantPoint());\n        break;\n      case 80:\n        this.stopCounting();\n        this.setCurrentPosition(this.getPreviousSignificantPoint());\n        break;\n      case 82:\n        this.reset();\n        break;\n      default: \n        break;\n    }\n  };\n\n  isChartEnabled = (chartType) => {\n    return this.state.enabledCharts.includes(chartType);\n  };\n\n  reset = () => {\n    this.stopCounting();\n    this.setCurrentPosition(0);\n  }\n\n  setCurrentPosition = (position) => {\n    this.setState(() => {\n      return {\n        currentPosition: position\n      }\n    });\n  };\n\n  setTimelineMarks = () => {\n    const marks = {\n      0: {\n        style: {\n          color: 'grey',\n        },\n        label: 'Start',\n      },\n      20000: {\n        style: {\n          color: 'grey',\n        },\n        label: 'End'\n      }\n    }\n\n    if (this.isChartEnabled(constants.MANUAL)) {\n      marks['7900'] = {\n        style: {\n          color: 'red',\n        },\n        label: 'A/B Significant (Loser)',\n      };\n    }\n\n    if (this.isChartEnabled(constants.MIN_TIME)) {\n      marks['13200'] = {\n        style: {\n          color: 'green',\n        } ,\n        label: 'Min Time Significant (Winner)',\n      };\n\n      marks['4650'] = {\n        style: {\n          color: 'red',\n        },\n        label: 'Min Time Significant (Loser)',\n      };\n    };\n\n    this.setState(() => {\n      return {\n        marks,\n      };\n    });\n  };\n\n  startCounting = () => {\n    if (this.state.currentPosition >= this.maxVisitors) {\n      this.setState(() => {\n        return {\n          currentPosition: 0,\n        };\n      }, this.startInterval);\n    } else {\n      this.startInterval();\n    }\n    this.setState(() => {\n      return {\n        isRunning: true,\n      };\n    });\n  };\n\n  startInterval = () => {\n    this.setState(() => {\n      return {\n        interval: setInterval(() => {\n          if (this.state.currentPosition >= this.maxVisitors) {\n            this.stopCounting();\n            return;\n          }\n          this.setState((_previousState) => {\n            return {\n              currentPosition: _previousState.currentPosition + _previousState.multiplier >= this.maxVisitors ? this.maxVisitors : _previousState.currentPosition + _previousState.multiplier,\n            };\n          });\n        }, 100),\n      }\n    });\n  };\n\n  stopCounting = () => {\n    clearInterval(this.state.interval);\n    this.setState(() => {\n      return {\n        interval: null,\n        isRunning: false,\n      };\n    });\n  };\n\n  toggleChart = (event) => {\n    const chartType = event.target.value;\n\n    if (this.state.enabledCharts.includes(chartType)) {\n      const charts = _.cloneDeep(this.state.enabledCharts);\n      this.setState(() => {\n        return {\n          enabledCharts: charts.filter(type => type !== chartType),\n        };\n      }, this.setTimelineMarks);\n    } else {\n      this.setState((previousState) => {\n        const charts = _.cloneDeep(previousState.enabledCharts)\n        charts.push(chartType);\n        return {\n          enabledCharts: charts,\n        };\n      }, this.setTimelineMarks);\n    }\n  };\n\n  toggleCharts = (event) => {\n    this.setState((previousState) => {\n      return {\n        hideGraphs: !previousState.hideGraphs,\n      }\n    })\n  };\n\n  render() {\n    return (\n      <div className=\"soft--sides\">\n        <div className=\"push--ends flex flex--row flex-align--center width--100\">\n          <div className={ classNames({\n            'push-double--right': true,\n            'flex': true,\n            'flex--column': true\n          }) }>\n            <div className=\"flex--row micro\">\n              <input\n                checked={ this.isChartEnabled(constants.MANUAL) }\n                id={ constants.MANUAL }\n                onChange={ this.toggleChart }\n                type=\"checkbox\"\n                value={ constants.MANUAL }\n              />\n              <label htmlFor={ constants.MANUAL }>\n                A/B\n              </label>\n            </div>\n            <div className=\"flex--row micro\">\n              <input\n                checked={ this.isChartEnabled(constants.MIN_REGRET) }\n                id={ constants.MIN_REGRET }\n                onChange={ this.toggleChart }\n                type=\"checkbox\"\n                value={ constants.MIN_REGRET }\n              />\n              <label htmlFor={ constants.MIN_REGRET }>\n                Min Regret\n              </label>\n            </div>\n            <div className=\"flex--row micro\">\n              <input\n                checked={ this.isChartEnabled(constants.MIN_TIME) }\n                id={ constants.MIN_TIME }\n                onChange={ this.toggleChart }\n                type=\"checkbox\"\n                value={ constants.MIN_TIME }\n              />\n              <label htmlFor={ constants.MIN_TIME }>\n                Min Time\n              </label>\n            </div>\n            <div className=\"flex--row micro\">\n              <input\n                checked={ this.state.hideGraphs }\n                id=\"charts\"\n                onChange={ this.toggleCharts }\n                type=\"checkbox\"\n              />\n              <label htmlFor=\"charts\">\n                Hide Graphs\n              </label>\n            </div>\n          </div>\n          <div className=\"push-double--right\">\n            { !this.state.interval && (\n              <button\n                className=\"no-padding\"\n                onClick={ this.startCounting }>\n                <div className=\"flex square--50 flex-align--center flex-justify--center\">\n                  { this.state.currentPosition !== this.maxVisitors && (\n                    <Icon\n                      name=\"play\"\n                      size=\"large\"\n                    />\n                  ) }\n                  { this.state.currentPosition === this.maxVisitors && (\n                    <Icon\n                      name=\"refresh\"\n                      size=\"large\"\n                    />\n                  ) }\n                </div>\n              </button>\n            ) }\n            { this.state.interval && (\n              <button\n                className=\"no-padding\"\n                onClick={ this.stopCounting }>\n                <div className=\"flex square--50 flex-align--center flex-justify--center\">\n                  <Icon\n                    name=\"pause\"\n                    size=\"large\"\n                  />\n                </div>\n              </button>\n            ) }\n          </div>\n          <div className=\"flex flex--1 flex-align--center push-double--right\">\n            <Slider\n              dots={ false }\n              min={ 0 }\n              marks={ this.state.marks }\n              max={ this.maxVisitors }\n              onChange={ this.setCurrentPosition }\n              value={ this.state.currentPosition }\n            />\n          </div>\n        </div>\n        <div className={ classNames({\n          'flex': this.state.hideGraphs,\n          'flex--row': this.state.hideGraphs,\n          'flex-justify--center': this.state.hideGraphs,\n          'flex--space': this.state.hideGraphs,\n        }) }>\n          { this.isChartEnabled(constants.MANUAL) && (\n            <div className=\"flex flex--row border push--ends\">\n              { !this.state.hideGraphs && (\n                <DistributionChart\n                  chartRef={ this.chartRefs.uniformRef }\n                  distributions={ this.uniformDistributions }\n                  policy={ constants.MANUAL }\n                  position={ this.state.currentPosition }\n                  sampleRate={ this.sampleRate }\n                  variations={ this.uniformVariations }\n                />\n              ) }\n              <SummaryCard\n                confidences={ this.uniformConfidences }\n                counts={ this.uniformCounts }\n                hideGraphs={ this.state.hideGraphs }\n                policy={ constants.MANUAL }\n                position={ this.state.currentPosition }\n                variations={ this.uniformVariations }\n              />\n            </div>\n          ) }\n          { this.isChartEnabled(constants.MIN_REGRET) && (\n            <div className=\"flex flex--row border push--ends\">\n              { !this.state.hideGraphs && (\n                <DistributionChart\n                  chartRef={ this.chartRefs.minRegretRef }\n                  distributions={ this.minRegretDistributions }\n                  policy={ constants.MIN_REGRET }\n                  position={ this.state.currentPosition }\n                  sampleRate={ this.sampleRate }\n                  variations={ this.minRegretVariations }\n                />\n              ) }\n              <SummaryCard\n                confidences={ this.minRegretConfidences }\n                counts={ this.minRegretCounts }\n                hideGraphs={ this.state.hideGraphs }\n                policy={ constants.MIN_REGRET }\n                position={ this.state.currentPosition }\n                variations={ this.minRegretVariations }\n              />\n            </div>\n          ) }\n          { this.isChartEnabled(constants.MIN_TIME) && (\n            <div className=\"flex flex--row border push--ends\">\n              { !this.state.hideGraphs && (\n                <DistributionChart\n                  chartRef={ this.chartRefs.minTimeRef }\n                  distributions={ this.minTimeDistributions }\n                  policy={ constants.MIN_TIME }\n                  position={ this.state.currentPosition }\n                  sampleRate={ this.sampleRate }\n                  variations={ this.minTimeVariations }\n                />\n              ) }\n              <SummaryCard\n                confidences={ this.minTimeConfidences }\n                counts={ this.minTimeCounts }\n                hideGraphs={ this.state.hideGraphs }\n                policy={ constants.MIN_TIME }\n                position={ this.state.currentPosition }\n                variations={ this.minTimeVariations }\n              />\n            </div>\n          ) }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}