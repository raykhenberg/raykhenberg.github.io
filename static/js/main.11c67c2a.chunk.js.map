{"version":3,"sources":["constants.js","fns.js","App.js","serviceWorker.js","index.js"],"names":["ORIGINAL","VARIATION_1","VARIATION_2","VARIATIONS","ALLOCATION_TYPES","MANUAL","MIN_REGRET","MIN_TIME","CHART_LABELS","_CHART_LABELS","Object","defineProperty","NO_NO_NO","_NO_NO_NO","YES_NO_NO","_YES_NO_NO","YES_NO_YES","_YES_NO_YES","YES_YES_NO","_YES_YES_NO","YES_YES_YES","_YES_YES_YES","NO_YES_NO","_NO_YES_NO","NO_YES_YES","_NO_YES_YES","NO_NO_YES","_NO_NO_YES","ORIG_ORIG_ORIG","_ORIG_ORIG_ORIG","VAR1_VAR1_VAR1","_VAR1_VAR1_VAR","VAR2_VAR2_VAR2","_VAR2_VAR2_VAR","constants","STATIC_ALLOCATION","_STATIC_ALLOCATION","roundDist","distribution","map","value","parseInt","fns","getConfidenceNumbers","jsonFile","variations","trafficAllocation","length","confidences","pValues","Array","fill","confidenceIntervals","Infinity","forEach","visitor","push","values","stats","statObject","pValue","confInterval","getCounts","visitorCounts","conversions","visitors","summaryObject","_","cloneDeep","variation","convert","getDistributions","sampleRate","arguments","undefined","initialPoints","distributions","index","visitorIndex","roundedDist","DistributionChart","getDistributionData","_this$props","_this","props","position","series","name","concat","data","slice","animation","duration","policy","this","chartRef","React","createRef","config","credits","enabled","plotOptions","line","marker","title","text","yAxis","react_default","a","createElement","className","ReactHighcharts_default","ref","Component","VariationCard","_this$props2","conversionCount","visitorCount","StatSigCard","formatPValue","_this2","toFixed","_this$props3","confidenceInterval","classNames","green","SummaryCard","getVisitorCount","_this3$props","_this3","counts","getConversionCount","_this3$props2","getPValue","_this3$props3","renderVariationCards","conversionTotal","visitorTotal","App_VariationCard","renderStatSigCards","App_StatSigCard","style","minWidth","App","_this4","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","currentPosition","interval","multiplier","setCurrentPosition","setState","startCounting","maxVisitors","startInterval","setInterval","stopCounting","_previousState","clearInterval","window","uniform","minRegretDistributions","minRegret","minTimeDistributions","minTime","uniformDistributions","minRegretCounts","minTimeCounts","uniformCounts","minRegretConfidences","minTimeConfidences","uniformConfidences","Math","max","minRegretVariations","minTimeVariations","uniformVariations","onClick","dist_default","size","es","dots","min","marks","0","color","label","13200","7900","4650","20000","onChange","App_DistributionChart","App_SummaryCard","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.11c67c2a.chunk.js","sourcesContent":["export const ORIGINAL = 'ORIGINAL';\nexport const VARIATION_1 = 'VARIATION_1';\nexport const VARIATION_2 = 'VARIATION_2';\n\nexport const VARIATIONS = {\n  ORIGINAL,\n  VARIATION_1,\n  VARIATION_2,\n};\n\nexport const MANUAL = 'MANUAL';\nexport const MIN_REGRET = 'MIN_REGRET'; // Accelerated Impact\nexport const MIN_TIME = 'MIN_TIME'; // Accelerated Learning\n\nexport const ALLOCATION_TYPES = {\n  MANUAL,\n  MIN_REGRET,\n  MIN_TIME,\n}\n\nexport const CHART_LABELS = {\n  [MANUAL]: 'Classic A/B',\n  [MIN_REGRET]: 'Min Regret (Accelerated Impact)',\n  [MIN_TIME]: 'Min Time (Accelerated Learning)',\n}\n\nconst NO_NO_NO = {\n  [ORIGINAL]: 0,\n  [VARIATION_1]: 0,\n  [VARIATION_2]: 0,\n};\n\nconst YES_NO_NO = {\n  [ORIGINAL]: 1,\n  [VARIATION_1]: 0,\n  [VARIATION_2]: 0,\n};\n\nconst YES_NO_YES = {\n  [ORIGINAL]: 1,\n  [VARIATION_1]: 0,\n  [VARIATION_2]: 1,\n};\n\nconst YES_YES_NO = {\n  [ORIGINAL]: 1,\n  [VARIATION_1]: 1,\n  [VARIATION_2]: 0,\n};\n\nconst YES_YES_YES = {\n  [ORIGINAL]: 1,\n  [VARIATION_1]: 1,\n  [VARIATION_2]: 1,\n};\n\nconst NO_YES_NO = {\n  [ORIGINAL]: 0,\n  [VARIATION_1]: 1,\n  [VARIATION_2]: 0,\n};\n\nconst NO_YES_YES = {\n  [ORIGINAL]: 0,\n  [VARIATION_1]: 1,\n  [VARIATION_2]: 1,\n};\n\nconst NO_NO_YES = {\n  [ORIGINAL]: 0,\n  [VARIATION_1]: 0,\n  [VARIATION_2]: 1,\n};\n\nconst ORIG_ORIG_ORIG = {\n  [MANUAL]: ORIGINAL,\n  [MIN_REGRET]: ORIGINAL,\n  [MIN_TIME]: ORIGINAL,\n};\n\nconst VAR1_VAR1_VAR1 = {\n  [MANUAL]: VARIATION_1,\n  [MIN_REGRET]: VARIATION_1,\n  [MIN_TIME]: VARIATION_1,\n};\n\nconst VAR2_VAR2_VAR2 = {\n  [MANUAL]: VARIATION_2,\n  [MIN_REGRET]: VARIATION_2,\n  [MIN_TIME]: VARIATION_2,\n}\n\nexport const DECISIONS = {\n  YES_NO_NO,\n  YES_NO_YES,\n  YES_YES_NO,\n  YES_YES_YES,\n  NO_NO_NO,\n  NO_NO_YES,\n  NO_YES_NO,\n  NO_YES_YES,\n}\nexport const STATIC_ALLOCATION = {\n  [ORIGINAL]: 0.345,\n  [VARIATION_1]: 0.33,\n  [VARIATION_2]: 0.325,\n}\n\nexport default {\n  ALLOCATION_TYPES,\n  CHART_LABELS,\n  MANUAL,\n  MIN_REGRET,\n  MIN_TIME,\n  NO_NO_NO,\n  NO_NO_YES,\n  NO_YES_NO,\n  NO_YES_YES,\n  ORIGINAL,\n  ORIG_ORIG_ORIG,\n  STATIC_ALLOCATION,\n  VAR1_VAR1_VAR1,\n  VAR2_VAR2_VAR2,\n  VARIATION_1,\n  VARIATION_2,\n  VARIATIONS,\n  YES_NO_NO,\n  YES_NO_YES,\n  YES_YES_NO,\n  YES_YES_YES,\n};\n","import _ from 'lodash';\n\nconst roundDist = (distribution) => {\n  return distribution.map((value) => {\n    return parseInt(value * 10000) / 100;\n  });\n}\n\nexport const getConfidenceNumbers = (jsonFile) => {\n\n  const variations = jsonFile[0].trafficAllocation.length - 1;\n  const confidences = [\n    {\n      pValues: Array(variations).fill(1),\n      confidenceIntervals: Array(variations).fill([-Infinity, Infinity]),\n    }\n  ];\n\n  jsonFile.forEach((visitor) => {\n    confidences.push({\n      pValues: Object.values(visitor.stats).map((statObject) => statObject.pValue),\n      confidenceIntervals: Object.values(visitor.stats).map((statObject) => statObject.confInterval),\n    });\n  });\n\n  return confidences;\n};\n\nexport const getCounts = (jsonFile) => {\n  const variations = jsonFile[0].trafficAllocation.length;\n  const visitorCounts = [{\n    conversions: Array(variations).fill(0),\n    visitors: Array(variations).fill(0),\n  }];\n\n  jsonFile.forEach((visitor) => {\n    const summaryObject = _.cloneDeep(visitorCounts[visitorCounts.length - 1]); \n    summaryObject.visitors[visitor.variation] = summaryObject.visitors[visitor.variation] + 1;\n    if (visitor.convert) {\n      summaryObject.conversions[visitor.variation] = summaryObject.conversions[visitor.variation] + 1;\n    }\n    visitorCounts.push(summaryObject);\n  });\n\n  return visitorCounts;\n};\n\nexport const getDistributions = (jsonFile, sampleRate = 1) => {\n  const variations = Array(jsonFile[0].trafficAllocation.length).fill([]);\n  const initialPoints = roundDist(_.cloneDeep(jsonFile[0].trafficAllocation));\n  const distributions = [];\n  variations.forEach((variation, index) => {\n    distributions[index] = [initialPoints[index]];\n  });\n\n  jsonFile.forEach((visitor, visitorIndex) => {\n    const roundedDist = roundDist(visitor.trafficAllocation);\n    variations.forEach((variation, index) => {\n      if (!(visitorIndex % sampleRate)) {\n        distributions[index].push(roundedDist[index]);\n      }\n    });\n  });\n\n  return distributions;\n};\n\nexport default {\n  getConfidenceNumbers,\n  getCounts,\n  getDistributions,\n};\n","import _ from 'lodash';\nimport classNames from 'class-names';\nimport React, { Component } from 'react';\nimport './App.css';\nimport Highcharts from 'highcharts';\nimport ReactHighcharts from 'react-highcharts';\nimport Slider from 'rc-slider';\nimport Icon from 'react-oui-icons';\n\nimport constants from './constants';\nimport fns from './fns';\n\nimport 'rc-slider/assets/index.css';\n\nclass DistributionChart extends Component {\n  getDistributionData = () => {\n    const {\n      distributions,\n      position,\n      sampleRate,\n      variations,\n    } = this.props;\n\n    const series = [];\n    \n    Array(variations).fill(1).forEach((value, index) => {\n      series.push({\n        name: !!index ? `Variation ${index}` : 'Original',\n        data: distributions[index].slice(0, parseInt(position / sampleRate)),\n        animation: {\n          duration: 0,\n        },\n      })\n    });\n\n    return _.cloneDeep(series);\n  }\n\n  render() {\n    const { policy } = this.props;\n\n    const chartRef = React.createRef();\n\n    const config = {\n      credits: {\n        enabled: false,\n      },\n      plotOptions: {\n        line: {\n          marker: {\n            enabled: false,\n          },\n        },\n      },\n      series: this.getDistributionData(),\n      title: {\n        text: constants.CHART_LABELS[policy],\n      },\n      yAxis: {\n        title: {\n          text: 'Distribution',\n        },\n      },\n    }\n\n    return (\n      <div className=\"flex--1\">\n        <ReactHighcharts\n          config={ config }\n          ref={ chartRef }\n        />\n      </div>\n    );\n  }\n}\n\nclass VariationCard extends Component {\n  render() {\n    const {\n      conversionCount,\n      title,\n      visitorCount,\n    } = this.props;\n\n    return (\n      <div className=\"flex flex--column flex-align--center soft--sides width--33\">\n        <h5>\n          { title }\n        </h5>\n        <p className=\"micro muted\">\n          Conversions\n        </p>\n        <h2>\n          { conversionCount }\n        </h2>\n        <p className=\"micro muted\">\n          Visitors\n        </p>\n        <h2>\n          { visitorCount }\n        </h2>\n      </div>\n    )\n  }\n}\n\nclass StatSigCard extends Component {\n  formatPValue = () => {\n    const { pValue } = this.props;\n\n    return ((1 - pValue) * 100).toFixed(2);\n  }\n\n  render() {\n    const {\n      confidenceInterval,\n      pValue,\n      title,\n    } = this.props;\n\n    return (\n      <div className=\"flex flex--column flex-align--center soft--sides width--50\">\n        <h5>\n          { title }\n        </h5>\n        <h2 className={ classNames({\n          green: pValue <= 0.10\n        }) }>\n          { this.formatPValue() }\n        </h2>\n      </div>\n    );\n  }\n}\n\nclass SummaryCard extends Component {\n  getVisitorCount = (variation) => {\n    const {\n      counts,\n      position,\n    } = this.props;\n\n    return counts[position].visitors[variation];\n  }\n\n  getConversionCount = (variation) => {\n    const {\n      counts,\n      position,\n    } = this.props;\n\n    return counts[position].conversions[variation];\n  }\n\n  getPValue = (variation) => {\n    const {\n      confidences,\n      position,\n    } = this.props;\n\n    return confidences[position].pValues[variation];\n  }\n\n  renderVariationCards = () => {\n    const { variations } = this.props;\n\n    let conversionTotal = 0;\n    let visitorTotal = 0;\n\n    return Array(variations + 1).fill(1).map((value, index) => {\n      if (index < variations) {\n        conversionTotal += this.getConversionCount(index);\n        visitorTotal += this.getVisitorCount(index);\n      }\n      if (!index) {\n        return (\n          <VariationCard \n            conversionCount={ this.getConversionCount(0) }\n            title=\"Original\"\n            visitorCount={ this.getVisitorCount(0) }\n          />\n        );\n      } else if (index === variations) {\n        return (\n          <VariationCard\n            conversionCount={ conversionTotal }\n            title=\"Total\"\n            visitorCount={ visitorTotal }\n          />\n        );\n      } else {\n        return (\n          <VariationCard \n            conversionCount={ this.getConversionCount(index) }\n            title={ `Variation ${index}` }\n            visitorCount={ this.getVisitorCount(index) }\n          />\n        );\n      }\n    });\n  };\n\n  renderStatSigCards = () => {\n    const { variations } = this.props;\n\n    return Array(variations - 1).fill(1).map((value, index) => {\n      return (\n        <StatSigCard\n          pValue={ this.getPValue(index) }\n          title={ `Variation ${index + 1}` }\n        />\n      )\n    });\n  };\n\n  render() {\n    const { variations } = this.props;\n    return (\n      <div\n        className=\"border--left flex flex-align--center flex--column\"\n        style={ {\n          minWidth: `${125 * variations}px`,\n        } }\n      >\n        <div className=\"flex flex--row flex--space width--100\">\n          { this.renderVariationCards() }\n        </div>\n        <h3 className=\"flex\">\n          Statistical Significance:\n        </h3>\n        <div className=\"flex flex--row flex--space width--100\">\n          { this.renderStatSigCards() }\n        </div>\n      </div>\n    )\n  }\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.sampleRate = window.uniform.length / 500;\n    this.minRegretDistributions = fns.getDistributions(window.minRegret, this.sampleRate);\n    this.minTimeDistributions = fns.getDistributions(window.minTime, this.sampleRate);\n    this.uniformDistributions = fns.getDistributions(window.uniform, this.sampleRate);\n    this.minRegretCounts = fns.getCounts(window.minRegret);\n    this.minTimeCounts = fns.getCounts(window.minTime);\n    this.uniformCounts = fns.getCounts(window.uniform);\n    this.minRegretConfidences = fns.getConfidenceNumbers(window.minRegret);\n    this.minTimeConfidences = fns.getConfidenceNumbers(window.minTime);\n    this.uniformConfidences = fns.getConfidenceNumbers(window.uniform);\n    this.maxVisitors = Math.max(window.minRegret.length, window.minTime.length, window.uniform.length);\n    this.minRegretVariations = window.minRegret[0].trafficAllocation.length;\n    this.minTimeVariations = window.minTime[0].trafficAllocation.length;\n    this.uniformVariations = window.uniform[0].trafficAllocation.length;\n  }\n\n  state = {\n    currentPosition: 0,\n    interval: null,\n    multiplier: 100,\n  };\n\n  setCurrentPosition = (position) => {\n    this.setState(() => {\n      return {\n        currentPosition: position\n      }\n    });\n  }\n\n  startCounting = () => {\n    if (this.state.currentPosition >= this.maxVisitors - 1) {\n      this.setState(() => {\n        return {\n          currentPosition: 0,\n        };\n      }, this.startInterval);\n    } else {\n      this.startInterval();\n    }\n  };\n\n  startInterval = () => {\n    this.setState(() => {\n      return {\n        interval: setInterval(() => {\n          if (this.state.currentPosition >= this.maxVisitors - 1) {\n            this.stopCounting();\n            return;\n          }\n          this.setState((_previousState) => {\n            return {\n              currentPosition: _previousState.currentPosition + _previousState.multiplier >= this.maxVisitors ? this.maxVisitors - 1 : _previousState.currentPosition + _previousState.multiplier,\n            };\n          });\n        }, 10),\n      }\n    });\n  }\n\n  stopCounting = () => {\n    clearInterval(this.state.interval);\n    this.setState(() => {\n      return {\n        interval: null,\n      };\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"soft--sides\">\n        <div className=\"push--ends flex flex--row flex-align--center width--100\">\n          <div className=\"push-double--right\">\n            { !this.state.interval && (\n              <button\n                className=\"no-padding\"\n                onClick={ this.startCounting }>\n                <div className=\"flex square--50 flex-align--center flex-justify--center\">\n                  { this.state.currentPosition !== this.maxVisitors - 1 && (\n                    <Icon\n                      name=\"play\"\n                      size=\"large\"\n                    />\n                  ) }\n                  { this.state.currentPosition === this.maxVisitors - 1 && (\n                    <Icon\n                      name=\"refresh\"\n                      size=\"large\"\n                    />\n                  ) }\n                </div>\n              </button>\n            ) }\n            { this.state.interval && (\n              <button\n                className=\"no-padding\"\n                onClick={ this.stopCounting }>\n                <div className=\"flex square--50 flex-align--center flex-justify--center\">\n                  <Icon\n                    name=\"pause\"\n                    size=\"large\"\n                  />\n                </div>\n              </button>\n            ) }\n          </div>\n          <div className=\"flex flex--1 flex-align--center push-double--right\">\n            <Slider\n              dots={ false }\n              min={ 0 }\n              marks={ {\n                0: {\n                  style: {\n                    color: 'grey',\n                  },\n                  label: 'Start',\n                },\n                13200: {\n                  style: {\n                    color: 'green',\n                  } ,\n                  label: 'Min Time Significant (Winner)',\n                },\n                7900: {\n                  style: {\n                    color: 'red',\n                  },\n                  label: 'A/B Significant (Loser)',\n                },\n                4650: {\n                  style: {\n                    color: 'red',\n                  },\n                  label: 'Min Time Significant (Loser)',\n                },\n                20000: {\n                  style: {\n                    color: 'grey',\n                  },\n                  label: 'End'\n                }\n              } }\n              max={ this.maxVisitors }\n              onChange={ this.setCurrentPosition }\n              value={ this.state.currentPosition }\n            />\n          </div>\n        </div>\n        <div className=\"flex flex--row border push--ends\">\n          <DistributionChart\n            distributions={ this.uniformDistributions }\n            policy={ constants.MANUAL }\n            position={ this.state.currentPosition }\n            sampleRate={ this.sampleRate }\n            variations={ this.uniformVariations }\n          />\n          <SummaryCard\n            confidences={ this.uniformConfidences }\n            counts={ this.uniformCounts }\n            position={ this.state.currentPosition }\n            variations={ this.uniformVariations }\n          />\n        </div>\n        <div className=\"flex flex--row border push--ends\">\n          <DistributionChart\n            distributions={ this.minRegretDistributions }\n            policy={ constants.MIN_REGRET }\n            position={ this.state.currentPosition }\n            sampleRate={ this.sampleRate }\n            variations={ this.minRegretVariations }\n          />\n          <SummaryCard\n            confidences={ this.minRegretConfidences }\n            counts={ this.minRegretCounts }\n            position={ this.state.currentPosition }\n            variations={ this.minRegretVariations }\n          />\n        </div>\n        <div className=\"flex flex--row border push--ends\">\n          <DistributionChart\n            distributions={ this.minTimeDistributions }\n            policy={ constants.MIN_TIME }\n            position={ this.state.currentPosition }\n            sampleRate={ this.sampleRate }\n            variations={ this.minTimeVariations }\n          />\n          <SummaryCard\n            confidences={ this.minTimeConfidences }\n            counts={ this.minTimeCounts }\n            position={ this.state.currentPosition }\n            variations={ this.minTimeVariations }\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}