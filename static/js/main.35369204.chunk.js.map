{"version":3,"sources":["constants.js","fns.js","App.js","serviceWorker.js","index.js"],"names":["constants","ALLOCATION_TYPES","MANUAL","MIN_REGRET","MIN_TIME","CHART_LABELS","_CHART_LABELS","Object","defineProperty","roundDist","distribution","map","value","parseInt","fns","getConfidenceNumbers","jsonFile","variations","trafficAllocation","length","confidences","pValues","Array","fill","confidenceIntervals","Infinity","forEach","visitor","push","values","stats","statObject","pValue","confInterval","getCounts","visitorCounts","conversions","visitors","totalConversions","totalVisitors","counterfactualConversions","counterfactualRate","totalConversionRate","summaryObject","_","cloneDeep","variation","convert","x","fixedPercentage","computedPercentage","Number","isNaN","computeCounterfactualRate","computedConversions","computeCounterfactualConversions","getDistributions","sampleRate","arguments","undefined","initialPoints","distributions","index","visitorIndex","roundedDist","colors","DistributionChart","getDistributionData","_this$props","_this","props","counterfactualEnabled","counts","position","showTotals","series","color","name","concat","data","slice","animation","duration","conversionRateSeries","counterfactualRateSeries","dashStyle","lineWidth","marker","enabled","tooltip","split","valueDecimals","valueSuffix","type","yAxis","_this$props2","this","chartRef","policy","config","chart","credits","plotOptions","line","formatter","points","point","pointValue","y","suffix","includes","toFixed","title","text","xAxis","labels","min","max","area","fillOpacity","stacking","opposite","style","react_default","a","createElement","className","ReactHighcharts_default","ref","Component","VariationCard","_this$props3","conversionCount","variationColor","visitorCount","StatSigCard","formatPValue","_this2","_this$props4","classNames","SummaryCard","getVisitorCount","_this3$props","_this3","getConversionCount","_this3$props2","getPValue","_this3$props3","isBetterThanBaseline","baselineConversionRate","variationConversionRate","renderVariationCards","conversionTotal","visitorTotal","App_VariationCard","key","renderStatSigCards","App_StatSigCard","_this$props5","hideGraphs","border--left","flex","flex-align--center","flex--column","soft","minWidth","App","_this4","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","currentPosition","enabledCharts","interval","isRunning","marks","multiplier","getNextSignificantPoint","_this4$state","significantPoints","keys","filter","mark","getPreviousSignificantPoint","_this4$state2","toggleCounterfactual","setState","previousState","toggleSeries","chartRefs","current","visible","hide","show","toggleTotals","handleKeyDown","event","keyCode","preventDefault","stopCounting","startCounting","toggleChart","target","setCurrentPosition","maxVisitors","toggleCharts","reset","isChartEnabled","chartType","setTimelineMarks","marksToDelete","entry","category","startInterval","setInterval","_previousState","clearInterval","charts","window","uniform","minRegretDistributions","minRegret","minTimeDistributions","minTime","uniformDistributions","minRegretCounts","minTimeCounts","uniformCounts","minRegretConfidences","minTimeConfidences","uniformConfidences","Math","minRegretVariations","minTimeVariations","uniformVariations","minRegretRef","React","createRef","minTimeRef","uniformRef","0","label","significance","nextTick","varIndex","top","toString","isSignificant","lower","document","addEventListener","push-double--right","checked","id","onChange","htmlFor","onClick","dist_default","size","es","dots","flex--row","flex-justify--center","flex--space","App_DistributionChart","App_SummaryCard","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.35369204.chunk.js","sourcesContent":["export const MANUAL = 'MANUAL';\nexport const MIN_REGRET = 'MIN_REGRET'; // Accelerated Impact\nexport const MIN_TIME = 'MIN_TIME'; // Accelerated Learning\n\nexport const ALLOCATION_TYPES = {\n  MANUAL,\n  MIN_REGRET,\n  MIN_TIME,\n}\n\nexport const CHART_LABELS = {\n  [MANUAL]: 'Standard A/B',\n  [MIN_REGRET]: 'Min Regret (Accelerated Impact)',\n  [MIN_TIME]: 'Min Time (Accelerated Learning)',\n}\n\nexport default {\n  ALLOCATION_TYPES,\n  CHART_LABELS,\n  MANUAL,\n  MIN_REGRET,\n  MIN_TIME,\n};\n","import _ from 'lodash';\n\nconst roundDist = (distribution) => {\n  return distribution.map((value) => {\n    return parseInt(value * 10000) / 100;\n  });\n};\n\nconst computeCounterfactualRate = (summaryObject, variations) => {\n  const fixedPercentage = 1 / variations;\n  let computedPercentage = 0;\n  let x;\n  for (x = 0; x < variations; x++) {\n    computedPercentage += (summaryObject.conversions[x] / summaryObject.visitors[x]) * fixedPercentage;\n  }\n  return Number.isNaN(computedPercentage) ? 0 : computedPercentage * 100;\n};\n\nconst computeCounterfactualConversions = (summaryObject, variations) => {\n  const fixedPercentage = 1 / variations;\n  let computedConversions = 0;\n  let x;\n  for (x = 0; x < variations; x++) {\n    computedConversions += (summaryObject.conversions[x] / summaryObject.visitors[x]) * (fixedPercentage * summaryObject.totalVisitors);\n  }\n  return Number.isNaN(computedConversions) ? 0 : parseInt(computedConversions);\n};\n\nexport const getConfidenceNumbers = (jsonFile) => {\n  const variations = jsonFile[0].trafficAllocation.length - 1;\n  const confidences = [\n    {\n      pValues: Array(variations).fill(1),\n      confidenceIntervals: Array(variations).fill([-Infinity, Infinity]),\n    }\n  ];\n\n  jsonFile.forEach((visitor) => {\n    confidences.push({\n      pValues: Object.values(visitor.stats).map((statObject) => statObject.pValue),\n      confidenceIntervals: Object.values(visitor.stats).map((statObject) => statObject.confInterval),\n    });\n  });\n\n  return confidences;\n};\n\nexport const getCounts = (jsonFile) => {\n  const variations = jsonFile[0].trafficAllocation.length;\n  const visitorCounts = [{\n    conversions: Array(variations).fill(0),\n    visitors: Array(variations).fill(0),\n    totalConversions: 0,\n    totalVisitors: 0,\n    counterfactualConversions: 0,\n    counterfactualRate: 0,\n    totalConversionRate: 0,\n  }];\n\n  jsonFile.forEach((visitor) => {\n    const summaryObject = _.cloneDeep(visitorCounts[visitorCounts.length - 1]); \n    summaryObject.visitors[visitor.variation] = summaryObject.visitors[visitor.variation] + 1;\n    summaryObject.totalVisitors = summaryObject.totalVisitors + 1;\n    if (visitor.convert) {\n      summaryObject.conversions[visitor.variation] = summaryObject.conversions[visitor.variation] + 1;\n      summaryObject.totalConversions = summaryObject.totalConversions + 1;\n    }\n    summaryObject.counterfactualRate = computeCounterfactualRate(summaryObject, variations);\n    summaryObject.counterfactualConversions = computeCounterfactualConversions(summaryObject, variations);\n    summaryObject.totalConversionRate = Number.isNaN(summaryObject.totalConversions / summaryObject.totalVisitors) ? 0 : (summaryObject.totalConversions / summaryObject.totalVisitors) * 100;\n    visitorCounts.push(summaryObject);\n  });\n\n  return visitorCounts;\n};\n\nexport const getDistributions = (jsonFile, sampleRate = 1) => {\n  const variations = Array(jsonFile[0].trafficAllocation.length).fill([]);\n  const initialPoints = roundDist(_.cloneDeep(jsonFile[0].trafficAllocation));\n  const distributions = [];\n  variations.forEach((variation, index) => {\n    distributions[index] = [initialPoints[index]];\n  });\n\n  jsonFile.forEach((visitor, visitorIndex) => {\n    const roundedDist = roundDist(visitor.trafficAllocation);\n    variations.forEach((variation, index) => {\n      if (!(visitorIndex % sampleRate)) {\n        distributions[index].push(roundedDist[index]);\n      }\n    });\n  });\n\n  return distributions;\n};\n\nexport default {\n  getConfidenceNumbers,\n  getCounts,\n  getDistributions,\n};\n","import _ from 'lodash';\nimport classNames from 'class-names';\nimport React, { Component } from 'react';\nimport './App.css';\nimport ReactHighcharts from 'react-highcharts';\nimport Slider from 'rc-slider';\nimport Icon from 'react-oui-icons';\n\nimport constants from './constants';\nimport fns from './fns';\n\nimport 'rc-slider/assets/index.css';\n\nconst colors = [\n  '#ffda7c',\n  '#ff6090',\n  '#9a67ea',\n  '#6ec6ff',\n]\n\nclass DistributionChart extends Component {\n  getDistributionData = () => {\n    const {\n      counterfactualEnabled,\n      counts,\n      distributions,\n      position,\n      sampleRate,\n      showTotals,\n      variations,\n    } = this.props;\n\n    const series = [];\n    \n    Array(variations).fill(1).forEach((value, index) => {\n      series.push({\n        color: colors[index],\n        name: !!index ? `Variation ${index}` : 'Original',\n        data: distributions[index].slice(0, parseInt(position / sampleRate)),\n        animation: {\n          duration: 0,\n        },\n      })\n    });\n    \n    if (counterfactualEnabled) {\n      const conversionRateSeries = [];\n      const counterfactualRateSeries = [];\n      const totalConversions = [];\n      const counterfactualConversions = [];\n      let index = 0;\n      while (index <= position) {\n        conversionRateSeries.push(counts[index].totalConversionRate);\n        counterfactualRateSeries.push(counts[index].counterfactualRate);\n        totalConversions.push(counts[index].totalConversions);\n        counterfactualConversions.push(counts[index].counterfactualConversions);\n        index += sampleRate;\n      }\n\n      series.push({\n        animation: {\n          duration: 0,\n        },\n        color: 'black',\n        dashStyle: 'solid',\n        data: conversionRateSeries,\n        lineWidth: 2,\n        marker: {\n          enabled: false\n        },\n        name: 'Total Conversion Rate',\n        tooltip: {\n          split: true,\n          valueDecimals: 2,\n          valueSuffix: '%',\n        },\n        type: 'spline',\n        yAxis: 1,\n      });\n\n      series.push({\n        animation: {\n          duration: 0,\n        },\n        color: 'black',\n        dashStyle: 'shortdot',\n        data: counterfactualRateSeries,\n        lineWidth: 2,\n        marker: {\n          enabled: false\n        },\n        name: 'Counterfactual Conversion Rate',\n        tooltip: {\n          split: true,\n          valueDecimals: 2,\n          valueSuffix: '%',\n        },\n        type: 'spline',\n        yAxis: 1,\n      });\n\n      if (showTotals) {\n        series.push({\n          animation: {\n            duration: 0,\n          },\n          color: 'white',\n          data: totalConversions,\n          lineWidth: 2,\n          marker: {\n            enabled: false\n          },\n          name: 'Total Conversions',\n          tooltip: {\n            split: true,\n          },\n          type: 'spline',\n          yAxis: 2,\n        });\n\n        series.push({\n          animation: {\n            duration: 0,\n          },\n          color: 'white',\n          dashStyle: 'shortdot',\n          data: counterfactualConversions,\n          lineWidth: 2,\n          marker: {\n            enabled: false\n          },\n          name: 'Counterfactual Conversions',\n          tooltip: {\n            split: true,\n          },\n          type: 'spline',\n          yAxis: 2,\n        });\n      }\n    }\n\n    return _.cloneDeep(series);\n  }\n\n  render() {\n    const {\n      chartRef,\n      counterfactualEnabled,\n      distributions,\n      policy,\n      sampleRate,\n      showTotals,\n    } = this.props;\n\n    let config = {\n      chart: {\n        // backgroundColor: 'lightgray',\n        type: counterfactualEnabled ? 'area' : 'line',\n      },\n      credits: {\n        enabled: false,\n      },\n      plotOptions: {\n        line: {\n          marker: {\n            enabled: false,\n          },\n        },\n      },\n      tooltip: {formatter: function () {\n        // The first returned item is the header, subsequent items are the\n        // points\n        return ['<b>' + this.x * sampleRate + ' visitors</b>'].concat(\n            this.points.map(function (point) {\n              let pointValue = point.y;\n              let suffix = '% of Traffic';\n              if (point.series.name.includes('Rate')) {\n                suffix = '%';\n              }\n              if (!point.series.name.includes('Conversions')) {\n                pointValue = Number(point.y).toFixed(2) + suffix;\n              }\n              return point.series.name + ': ' + pointValue;\n            })\n          );\n        },\n        split: true,\n        valueSuffix: '% of Traffic',\n      },\n      series: this.getDistributionData(),\n      title: {\n        text: constants.CHART_LABELS[policy],\n      },\n      xAxis: {\n        labels: {\n          formatter: function() {\n            return this.value * sampleRate;\n          }\n        },\n        min: 0,\n        max: parseInt(distributions[0].length),\n      },\n      yAxis: [\n        {\n          labels: {\n            formatter: function() {\n              return this.value + '%';\n            },\n          },\n          title: {\n            text: 'Distribution',\n          },\n        },\n      ],\n    }\n\n    if (counterfactualEnabled) {\n      config.plotOptions = {\n        area: {\n          lineWidth: 0,\n          fillOpacity: 1,\n          marker: {\n            enabled: false\n          },\n          stacking: 'percent',\n        },\n      }\n\n      config.yAxis.push({\n        opposite: true,\n        labels: {\n          formatter: function() {\n            return this.value + '%';\n          },\n        },\n        // max: 60,\n        // min: 40,\n        title: {\n          style: {\n            color: 'black',\n          },\n          text: 'Conversion Rate',\n        },\n      })\n    }\n\n    if (showTotals) {\n      config.yAxis.push({\n        opposite: true,\n        // max: 12000,\n        title: {\n          style: {\n            color: 'white',\n          },\n          text: 'Conversions',\n        },\n      });\n    }\n\n    return (\n      <div className=\"flex--1\">\n        <ReactHighcharts\n          config={ config }\n          ref={ chartRef }\n        />\n      </div>\n    );\n  }\n}\n\nclass VariationCard extends Component {\n  render() {\n    const {\n      color,\n      conversionCount,\n      title,\n      variationColor,\n      visitorCount,\n    } = this.props;\n\n    return (\n      <div\n        className=\"flex flex--column flex-align--center soft--sides\">\n        <h5 style={ { 'color': variationColor } }>\n          { title }\n        </h5>\n        <p className=\"micro muted\">\n          Conversions\n        </p>\n        <h3 className={ `${color}` }>\n          { conversionCount }\n        </h3>\n        <p className=\"micro muted\">\n          Visitors\n        </p>\n        <h3 className={ `${color}` }>\n          { visitorCount }\n        </h3>\n        <p className=\"micro muted\">\n          Conversion Rate\n        </p>\n        <h3 className={ `${color}` }>\n          { `${visitorCount ? ((conversionCount / visitorCount) * 100).toFixed(2) : '0.00'}%` }\n        </h3>\n      </div>\n    )\n  }\n}\n\nclass StatSigCard extends Component {\n  formatPValue = () => {\n    const { pValue } = this.props;\n\n    return `${ ((1 - pValue) * 100).toFixed(2) }%`;\n  }\n\n  render() {\n    const {\n      color,\n      pValue,\n      title,\n    } = this.props;\n\n    return (\n      <div className=\"flex flex--column flex-align--center soft--sides width--50\">\n        <h5>\n          { title }\n        </h5>\n        <h3 className={ classNames({\n          [color]: pValue <= 0.10\n        }) }>\n          { this.formatPValue() }\n        </h3>\n      </div>\n    );\n  }\n}\n\nclass SummaryCard extends Component {\n  getVisitorCount = (variation) => {\n    const {\n      counts,\n      position,\n    } = this.props;\n\n    return counts[position].visitors[variation];\n  }\n\n  getConversionCount = (variation) => {\n    const {\n      counts,\n      position,\n    } = this.props;\n\n    return counts[position].conversions[variation];\n  }\n\n  getPValue = (variation) => {\n    const {\n      confidences,\n      position,\n    } = this.props;\n\n    return confidences[position].pValues[variation];\n  }\n\n  isBetterThanBaseline = (variation) => {\n    const baselineConversionRate = this.getConversionCount(0) / this.getVisitorCount(0);\n    const variationConversionRate = this.getConversionCount(variation) / this.getVisitorCount(variation);\n    return Number.isNaN(baselineConversionRate) || Number.isNaN(variationConversionRate) ? false : variationConversionRate > baselineConversionRate;\n  };\n\n  renderVariationCards = () => {\n    const { variations } = this.props;\n\n    let conversionTotal = 0;\n    let visitorTotal = 0;\n\n    return Array(variations + 1).fill(1).map((value, index) => {\n      if (index < variations) {\n        conversionTotal += this.getConversionCount(index);\n        visitorTotal += this.getVisitorCount(index);\n      }\n      if (!index) {\n        return (\n          <VariationCard\n            color=\"black\"\n            conversionCount={ this.getConversionCount(0) }\n            key={ index }\n            title=\"Original\"\n            variationColor={ colors[index] }\n            visitorCount={ this.getVisitorCount(0) }\n          />\n        );\n      } else if (index === variations) {\n        return (\n          <VariationCard\n            color=\"black\"\n            conversionCount={ conversionTotal }\n            key={ index }\n            title=\"Total\"\n            variationColor='black'\n            visitorCount={ visitorTotal }\n          />\n        );\n      } else {\n        return (\n          <VariationCard \n            color={ this.getPValue(index - 1) <= 0.10 ? this.isBetterThanBaseline(index) ? 'green' : 'red' : 'black' }\n            conversionCount={ this.getConversionCount(index) }\n            key={ index }\n            title={ `Variation ${index}` }\n            variationColor={ colors[index] }\n            visitorCount={ this.getVisitorCount(index) }\n          />\n        );\n      }\n    });\n  };\n\n  renderStatSigCards = () => {\n    const { variations } = this.props;\n\n    return Array(variations - 1).fill(1).map((value, index) => {\n      return (\n        <StatSigCard\n          color={ this.isBetterThanBaseline(index + 1) ? 'green' : 'red' }\n          key={ index }\n          pValue={ this.getPValue(index) }\n          title={ `Variation ${index + 1}` }\n        />\n      )\n    });\n  };\n\n  render() {\n    const { hideGraphs, policy, variations } = this.props;\n    return (\n      <div\n        className={ classNames({\n          \"border--left\": !hideGraphs,\n          \"flex\": true,\n          \"flex-align--center\": true,\n          \"flex--column\": true,\n          \"soft\": hideGraphs,\n        }) }\n        style={ {\n          minWidth: `${125 * variations}px`,\n        } }\n      >\n        { hideGraphs && (\n          <h1>{ constants.CHART_LABELS[policy] }</h1>\n        ) }\n        <div className=\"flex flex--row flex--space width--100\">\n          { this.renderVariationCards() }\n        </div>\n        <h4 className=\"flex\">\n          Statistical Significance:\n        </h4>\n        <div className=\"flex flex--row flex--space width--100\">\n          { this.renderStatSigCards() }\n        </div>\n      </div>\n    )\n  }\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.sampleRate = window.uniform.length / 500;\n    this.minRegretDistributions = fns.getDistributions(window.minRegret, this.sampleRate);\n    this.minTimeDistributions = fns.getDistributions(window.minTime, this.sampleRate);\n    this.uniformDistributions = fns.getDistributions(window.uniform, this.sampleRate);\n    this.minRegretCounts = fns.getCounts(window.minRegret);\n    this.minTimeCounts = fns.getCounts(window.minTime);\n    this.uniformCounts = fns.getCounts(window.uniform);\n    this.minRegretConfidences = fns.getConfidenceNumbers(window.minRegret);\n    this.minTimeConfidences = fns.getConfidenceNumbers(window.minTime);\n    this.uniformConfidences = fns.getConfidenceNumbers(window.uniform);\n    this.maxVisitors = Math.max(window.minRegret.length, window.minTime.length, window.uniform.length);\n    this.minRegretVariations = window.minRegret[0].trafficAllocation.length;\n    this.minTimeVariations = window.minTime[0].trafficAllocation.length;\n    this.uniformVariations = window.uniform[0].trafficAllocation.length;\n    this.chartRefs = {\n      minRegretRef: React.createRef(),\n      minTimeRef: React.createRef(),\n      uniformRef: React.createRef(),\n    }\n    this.marks = {\n      0: {\n        style: {\n          color: 'grey',\n        },\n        label: 'Start',\n        category: 'ALL',\n      },\n      [this.maxVisitors]: {\n        style: {\n          color: 'grey',\n        },\n        label: 'End',\n        category: 'ALL',\n      },\n    };\n    const significance = {\n      'minRegret': new Array(this.minRegretVariations - 1).fill(false),\n      'minTime': new Array(this.minTimeVariations - 1).fill(false),\n      'uniform': new Array(this.uniformVariations - 1).fill(false),\n    }\n\n    const distributions = new Array(this.minTimeVariations).fill(true);\n\n    for (let index = 0; index < this.maxVisitors; index++) {\n      const nextTick =  index + (this.sampleRate - index % this.sampleRate) + this.sampleRate * 2;\n      if (index) {\n        for (let varIndex = 0; varIndex < this.minRegretVariations; varIndex++) {\n          if (window.minTime[index].trafficAllocation[varIndex] / window.minTime[index - 1].trafficAllocation[varIndex] < .10) {\n            this.marks[nextTick] = {\n              style: {\n                color: 'gray',\n                top: '-35px',\n              },\n              label: 'Min Time Reallocation',\n              category: constants.MIN_TIME,\n              key: nextTick,\n            }\n          }\n        }\n      }\n      for (let varIndex = 0; varIndex < this.uniformVariations - 1; varIndex++) {\n        if (significance.minRegret[varIndex] !== window.minRegret[index].stats[(varIndex + 1).toString()].isSignificant) {\n          if (window.minRegret[index].stats[(varIndex + 1).toString()].confInterval.lower > 0) {\n            this.marks[nextTick] = {\n              style: {\n                color: 'green',\n              },\n              label: 'Min Regret Significant (Winner)',\n              category: constants.MIN_REGRET,\n              key: nextTick,\n            }\n          } else {\n            this.marks[nextTick] = {\n              style: {\n                color: 'red',\n              },\n              label: 'Min Regret Significant (Loser)',\n              category: constants.MIN_REGRET,\n              key: nextTick,\n            }\n          }\n          significance.minRegret[varIndex] = !significance.minRegret[varIndex];\n        }\n\n        if (significance.minTime[varIndex] !== window.minTime[index].stats[(varIndex + 1).toString()].isSignificant) {\n          if (window.minTime[index].stats[(varIndex + 1).toString()].confInterval.lower > 0) {\n            this.marks[nextTick] = {\n              style: {\n                color: 'green',\n              },\n              label: 'Min Time Significant (Winner)',\n              category: constants.MIN_TIME,\n              key: nextTick,\n            }\n          } else {\n            this.marks[nextTick] = {\n              style: {\n                color: 'red',\n              },\n              label: 'Min Time Significant (Loser)',\n              category: constants.MIN_TIME,\n              key: nextTick,\n            }\n          }\n          significance.minTime[varIndex] = !significance.minTime[varIndex];\n        }\n\n        if (significance.uniform[varIndex] !== window.uniform[index].stats[(varIndex + 1).toString()].isSignificant) {\n          if (window.uniform[index].stats[(varIndex + 1).toString()].confInterval.lower > 0) {\n            this.marks[nextTick] = {\n              style: {\n                color: 'green',\n              },\n              label: 'A/B Test Significant (Winner)',\n              category: constants.MANUAL,\n              key: nextTick,\n            }\n          } else {\n            this.marks[nextTick] = {\n              style: {\n                color: 'red',\n              },\n              label: 'A/B Test Significant (Loser)',\n              category: constants.MANUAL,\n              key: nextTick,\n            }\n          }\n          significance.uniform[varIndex] = !significance.uniform[varIndex];\n        }\n      }\n    }\n  }\n\n  state = {\n    counterfactualEnabled: false,\n    currentPosition: 0,\n    enabledCharts: [constants.MANUAL],\n    hideGraphs: false,\n    interval: null,\n    isRunning: false,\n    marks: {},\n    multiplier: 100,\n    showTotals: true,\n  };\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKeyDown);\n    this.setTimelineMarks();\n  }\n\n  getNextSignificantPoint = () => {\n    const {\n      currentPosition,\n      marks,\n    } = this.state;\n    const significantPoints = Object.keys(marks).filter(mark => mark > currentPosition);\n    return significantPoints.length ? Number(significantPoints[0]) : currentPosition;\n  };\n\n  getPreviousSignificantPoint = () => {\n    const {\n      currentPosition,\n      marks,\n    } = this.state;\n    const significantPoints = Object.keys(marks).filter(mark => mark < currentPosition);\n    return significantPoints.length ? Number(significantPoints[significantPoints.length - 1]) : currentPosition;\n  };\n\n  toggleCounterfactual = () => {\n    this.setState((previousState) => {\n      return {\n        counterfactualEnabled: !previousState.counterfactualEnabled,\n      };\n    });\n  };\n\n  toggleSeries = (index) => {\n    Object.values(this.chartRefs).forEach((ref) => {\n      if (ref.current && ref.current.chart.series[index].visible) {\n        ref.current.chart.series[index].hide();\n      } else if (ref.current && !ref.current.chart.series[index].visible) {\n        ref.current.chart.series[index].show();\n      }\n    });\n  };\n\n  toggleTotals = () => {\n    this.setState((previousState) => {\n      return {\n        showTotals: !previousState.showTotals,\n      };\n    });\n  };\n\n  handleKeyDown = (event) => {\n    switch( event.keyCode ) {\n      case 32:\n        event.preventDefault();\n        if (this.state.isRunning) {\n          this.stopCounting();\n        } else {\n          this.startCounting();\n        }\n        break;\n      case 48:\n        this.toggleSeries(0);\n        break;\n      case 49:\n        this.toggleSeries(1);\n        break;\n      case 50:\n        this.toggleSeries(2);\n        break;\n      case 51:\n        this.toggleSeries(3);\n        break;\n      case 65:\n        this.toggleChart({ target: { value: constants.MANUAL } });\n        break;\n      case 67:\n        this.toggleCounterfactual();\n        break;\n      case 69:\n        this.stopCounting();\n        this.setCurrentPosition(this.maxVisitors);\n        break;\n      case 71:\n        this.toggleCharts();\n        break;\n      case 73:\n        this.toggleChart({ target: { value: constants.MIN_REGRET } });\n        break;\n      case 76:\n        this.toggleChart({ target: { value: constants.MIN_TIME } });\n        break;\n      case 78:\n        this.stopCounting();\n        this.setCurrentPosition(this.getNextSignificantPoint());\n        break;\n      case 80:\n        this.stopCounting();\n        this.setCurrentPosition(this.getPreviousSignificantPoint());\n        break;\n      case 82:\n        this.reset();\n        break;\n      case 84:\n        this.toggleTotals();\n        break;\n      default: \n        break;\n    }\n  };\n\n  isChartEnabled = (chartType) => {\n    return this.state.enabledCharts.includes(chartType);\n  };\n\n  reset = () => {\n    this.stopCounting();\n    this.setCurrentPosition(0);\n  }\n\n  setCurrentPosition = (position) => {\n    this.setState(() => {\n      return {\n        currentPosition: position\n      }\n    });\n  };\n\n  setTimelineMarks = () => {\n    let marks = _.cloneDeep(this.marks)\n    const marksToDelete = [];\n\n    Object.values(constants.ALLOCATION_TYPES).forEach((type) => {\n      if (!this.isChartEnabled(type)) {\n        _.map(marks, (entry) => {\n          if (entry.category === type) {\n            marksToDelete.push(entry.key);\n          }\n        });\n      }\n    });\n\n    marksToDelete.forEach((key) => {\n      delete marks[key];\n    });\n\n    this.setState(() => {\n      return {\n        marks,\n      };\n    });\n  };\n\n  startCounting = () => {\n    if (this.state.currentPosition >= this.maxVisitors) {\n      this.setState(() => {\n        return {\n          currentPosition: 0,\n        };\n      }, this.startInterval);\n    } else {\n      this.startInterval();\n    }\n    this.setState(() => {\n      return {\n        isRunning: true,\n      };\n    });\n  };\n\n  startInterval = () => {\n    this.setState(() => {\n      return {\n        interval: setInterval(() => {\n          if (this.state.currentPosition >= this.maxVisitors) {\n            this.stopCounting();\n            return;\n          }\n          this.setState((_previousState) => {\n            return {\n              currentPosition: _previousState.currentPosition + _previousState.multiplier >= this.maxVisitors ? this.maxVisitors : _previousState.currentPosition + _previousState.multiplier,\n            };\n          });\n        }, 100),\n      }\n    });\n  };\n\n  stopCounting = () => {\n    clearInterval(this.state.interval);\n    this.setState(() => {\n      return {\n        interval: null,\n        isRunning: false,\n      };\n    });\n  };\n\n  toggleChart = (event) => {\n    const chartType = event.target.value;\n\n    if (this.state.enabledCharts.includes(chartType)) {\n      const charts = _.cloneDeep(this.state.enabledCharts);\n      this.setState(() => {\n        return {\n          enabledCharts: charts.filter(type => type !== chartType),\n        };\n      }, this.setTimelineMarks);\n    } else {\n      this.setState((previousState) => {\n        const charts = _.cloneDeep(previousState.enabledCharts)\n        charts.push(chartType);\n        return {\n          enabledCharts: charts,\n        };\n      }, this.setTimelineMarks);\n    }\n  };\n\n  toggleCharts = (event) => {\n    this.setState((previousState) => {\n      return {\n        hideGraphs: !previousState.hideGraphs,\n      }\n    })\n  };\n\n  render() {\n    return (\n      <div className=\"soft--sides\">\n        <div className=\"push--ends flex flex--row flex-align--center width--100\">\n          <div className={ classNames({\n            'push-double--right': true,\n            'flex': true,\n            'flex--column': true\n          }) }>\n            <div className=\"flex--row micro\">\n              <input\n                checked={ this.isChartEnabled(constants.MANUAL) }\n                id={ constants.MANUAL }\n                onChange={ this.toggleChart }\n                type=\"checkbox\"\n                value={ constants.MANUAL }\n              />\n              <label htmlFor={ constants.MANUAL }>\n                A/B\n              </label>\n            </div>\n            <div className=\"flex--row micro\">\n              <input\n                checked={ this.isChartEnabled(constants.MIN_REGRET) }\n                id={ constants.MIN_REGRET }\n                onChange={ this.toggleChart }\n                type=\"checkbox\"\n                value={ constants.MIN_REGRET }\n              />\n              <label htmlFor={ constants.MIN_REGRET }>\n                Min Regret\n              </label>\n            </div>\n            <div className=\"flex--row micro\">\n              <input\n                checked={ this.isChartEnabled(constants.MIN_TIME) }\n                id={ constants.MIN_TIME }\n                onChange={ this.toggleChart }\n                type=\"checkbox\"\n                value={ constants.MIN_TIME }\n              />\n              <label htmlFor={ constants.MIN_TIME }>\n                Min Time\n              </label>\n            </div>\n            <div className=\"flex--row micro\">\n              <input\n                checked={ this.state.hideGraphs }\n                id=\"charts\"\n                onChange={ this.toggleCharts }\n                type=\"checkbox\"\n              />\n              <label htmlFor=\"charts\">\n                Hide Graphs\n              </label>\n            </div>\n          </div>\n          <div className=\"push-double--right\">\n            { !this.state.interval && (\n              <button\n                className=\"no-padding\"\n                onClick={ this.startCounting }>\n                <div className=\"flex square--50 flex-align--center flex-justify--center\">\n                  { this.state.currentPosition !== this.maxVisitors && (\n                    <Icon\n                      name=\"play\"\n                      size=\"large\"\n                    />\n                  ) }\n                  { this.state.currentPosition === this.maxVisitors && (\n                    <Icon\n                      name=\"refresh\"\n                      size=\"large\"\n                    />\n                  ) }\n                </div>\n              </button>\n            ) }\n            { this.state.interval && (\n              <button\n                className=\"no-padding\"\n                onClick={ this.stopCounting }>\n                <div className=\"flex square--50 flex-align--center flex-justify--center\">\n                  <Icon\n                    name=\"pause\"\n                    size=\"large\"\n                  />\n                </div>\n              </button>\n            ) }\n          </div>\n          <div className=\"flex flex--1 flex-align--center push-double--right\">\n            <Slider\n              dots={ false }\n              min={ 0 }\n              marks={ this.state.marks }\n              max={ this.maxVisitors }\n              onChange={ this.setCurrentPosition }\n              value={ this.state.currentPosition }\n            />\n          </div>\n        </div>\n        <div className={ classNames({\n          'flex': this.state.hideGraphs,\n          'flex--row': this.state.hideGraphs,\n          'flex-justify--center': this.state.hideGraphs,\n          'flex--space': this.state.hideGraphs,\n        }) }>\n          { this.isChartEnabled(constants.MANUAL) && (\n            <div className=\"flex flex--row border push--ends\">\n              { !this.state.hideGraphs && (\n                <DistributionChart\n                  chartRef={ this.chartRefs.uniformRef }\n                  counterfactualEnabled={ this.state.counterfactualEnabled }\n                  counts={ this.uniformCounts }\n                  distributions={ this.uniformDistributions }\n                  policy={ constants.MANUAL }\n                  position={ this.state.currentPosition }\n                  sampleRate={ this.sampleRate }\n                  showTotals={ this.state.showTotals }\n                  variations={ this.uniformVariations }\n                />\n              ) }\n              <SummaryCard\n                confidences={ this.uniformConfidences }\n                counts={ this.uniformCounts }\n                hideGraphs={ this.state.hideGraphs }\n                policy={ constants.MANUAL }\n                position={ this.state.currentPosition }\n                variations={ this.uniformVariations }\n              />\n            </div>\n          ) }\n          { this.isChartEnabled(constants.MIN_REGRET) && (\n            <div className=\"flex flex--row border push--ends\">\n              { !this.state.hideGraphs && (\n                <DistributionChart\n                  chartRef={ this.chartRefs.minRegretRef }\n                  counterfactualEnabled={ this.state.counterfactualEnabled }\n                  counts={ this.minRegretCounts }\n                  distributions={ this.minRegretDistributions }\n                  policy={ constants.MIN_REGRET }\n                  position={ this.state.currentPosition }\n                  sampleRate={ this.sampleRate }\n                  showTotals={ this.state.showTotals }\n                  variations={ this.minRegretVariations }\n                />\n              ) }\n              <SummaryCard\n                confidences={ this.minRegretConfidences }\n                counts={ this.minRegretCounts }\n                hideGraphs={ this.state.hideGraphs }\n                policy={ constants.MIN_REGRET }\n                position={ this.state.currentPosition }\n                variations={ this.minRegretVariations }\n              />\n            </div>\n          ) }\n          { this.isChartEnabled(constants.MIN_TIME) && (\n            <div className=\"flex flex--row border push--ends\">\n              { !this.state.hideGraphs && (\n                <DistributionChart\n                  chartRef={ this.chartRefs.minTimeRef }\n                  counterfactualEnabled={ this.state.counterfactualEnabled }\n                  counts={ this.minTimeCounts }\n                  distributions={ this.minTimeDistributions }\n                  policy={ constants.MIN_TIME }\n                  position={ this.state.currentPosition }\n                  sampleRate={ this.sampleRate }\n                  showTotals={ this.state.showTotals }\n                  variations={ this.minTimeVariations }\n                />\n              ) }\n              <SummaryCard\n                confidences={ this.minTimeConfidences }\n                counts={ this.minTimeCounts }\n                hideGraphs={ this.state.hideGraphs }\n                policy={ constants.MIN_TIME }\n                position={ this.state.currentPosition }\n                variations={ this.minTimeVariations }\n              />\n            </div>\n          ) }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}