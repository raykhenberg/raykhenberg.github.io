{"version":3,"sources":["constants.js","fns.js","App.js","serviceWorker.js","index.js"],"names":["ORIGINAL","VARIATION_1","VARIATION_2","VARIATIONS","ALLOCATION_TYPES","MANUAL","MIN_REGRET","MIN_TIME","CHART_LABELS","_CHART_LABELS","Object","defineProperty","NO_NO_NO","_NO_NO_NO","YES_NO_NO","_YES_NO_NO","YES_NO_YES","_YES_NO_YES","YES_YES_NO","_YES_YES_NO","YES_YES_YES","_YES_YES_YES","NO_YES_NO","_NO_YES_NO","NO_YES_YES","_NO_YES_YES","NO_NO_YES","_NO_NO_YES","ORIG_ORIG_ORIG","_ORIG_ORIG_ORIG","VAR1_VAR1_VAR1","_VAR1_VAR1_VAR","VAR2_VAR2_VAR2","_VAR2_VAR2_VAR","constants","STATIC_ALLOCATION","_STATIC_ALLOCATION","roundDist","distribution","map","value","parseInt","fns","getConfidenceNumbers","jsonFile","confidences","pValues","confidenceIntervals","Infinity","forEach","visitor","push","stats","pValue","confInterval","getCounts","visitorCounts","conversions","visitors","summaryObject","_","cloneDeep","length","variation","convert","getDistributions","distributions","trafficAllocation","roundedDist","DistributionChart","getDistributionData","_this$props","_this","props","position","series","name","data","animation","duration","index","policy","this","chartRef","React","createRef","config","credits","enabled","title","text","yAxis","react_default","a","createElement","className","ReactHighcharts_default","ref","Component","VariationCard","_this$props2","conversionCount","visitorCount","StatSigCard","formatPValue","_this2","toFixed","_this$props3","confidenceInterval","classNames","green","SummaryCard","getVisitorCount","_this3$props","_this3","counts","getConversionCount","_this3$props2","getPValue","_this3$props3","App_VariationCard","App_StatSigCard","App","_this4","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","currentPosition","interval","multiplier","setCurrentPosition","setState","startCounting","maxVisitors","startInterval","setInterval","stopCounting","_previousState","clearInterval","minRegretDistributions","minRegret","minTimeDistributions","minTime","uniformDistributions","uniform","minRegretCounts","minTimeCounts","uniformCounts","minRegretConfidences","minTimeConfidences","uniformConfidences","Math","max","onClick","dist_default","size","es","dots","min","marks","1766","style","color","label","onChange","App_DistributionChart","App_SummaryCard","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.397d4c39.chunk.js","sourcesContent":["export const ORIGINAL = 'ORIGINAL';\nexport const VARIATION_1 = 'VARIATION_1';\nexport const VARIATION_2 = 'VARIATION_2';\n\nexport const VARIATIONS = {\n  ORIGINAL,\n  VARIATION_1,\n  VARIATION_2,\n};\n\nexport const MANUAL = 'MANUAL';\nexport const MIN_REGRET = 'MIN_REGRET'; // Accelerated Impact\nexport const MIN_TIME = 'MIN_TIME'; // Accelerated Learning\n\nexport const ALLOCATION_TYPES = {\n  MANUAL,\n  MIN_REGRET,\n  MIN_TIME,\n}\n\nexport const CHART_LABELS = {\n  [MANUAL]: 'Classic A/B',\n  [MIN_REGRET]: 'Min Regret (Accelerated Impact)',\n  [MIN_TIME]: 'Min Time (Accelerated Learning)',\n}\n\nconst NO_NO_NO = {\n  [ORIGINAL]: 0,\n  [VARIATION_1]: 0,\n  [VARIATION_2]: 0,\n};\n\nconst YES_NO_NO = {\n  [ORIGINAL]: 1,\n  [VARIATION_1]: 0,\n  [VARIATION_2]: 0,\n};\n\nconst YES_NO_YES = {\n  [ORIGINAL]: 1,\n  [VARIATION_1]: 0,\n  [VARIATION_2]: 1,\n};\n\nconst YES_YES_NO = {\n  [ORIGINAL]: 1,\n  [VARIATION_1]: 1,\n  [VARIATION_2]: 0,\n};\n\nconst YES_YES_YES = {\n  [ORIGINAL]: 1,\n  [VARIATION_1]: 1,\n  [VARIATION_2]: 1,\n};\n\nconst NO_YES_NO = {\n  [ORIGINAL]: 0,\n  [VARIATION_1]: 1,\n  [VARIATION_2]: 0,\n};\n\nconst NO_YES_YES = {\n  [ORIGINAL]: 0,\n  [VARIATION_1]: 1,\n  [VARIATION_2]: 1,\n};\n\nconst NO_NO_YES = {\n  [ORIGINAL]: 0,\n  [VARIATION_1]: 0,\n  [VARIATION_2]: 1,\n};\n\nconst ORIG_ORIG_ORIG = {\n  [MANUAL]: ORIGINAL,\n  [MIN_REGRET]: ORIGINAL,\n  [MIN_TIME]: ORIGINAL,\n};\n\nconst VAR1_VAR1_VAR1 = {\n  [MANUAL]: VARIATION_1,\n  [MIN_REGRET]: VARIATION_1,\n  [MIN_TIME]: VARIATION_1,\n};\n\nconst VAR2_VAR2_VAR2 = {\n  [MANUAL]: VARIATION_2,\n  [MIN_REGRET]: VARIATION_2,\n  [MIN_TIME]: VARIATION_2,\n}\n\nexport const DECISIONS = {\n  YES_NO_NO,\n  YES_NO_YES,\n  YES_YES_NO,\n  YES_YES_YES,\n  NO_NO_NO,\n  NO_NO_YES,\n  NO_YES_NO,\n  NO_YES_YES,\n}\nexport const STATIC_ALLOCATION = {\n  [ORIGINAL]: 0.345,\n  [VARIATION_1]: 0.33,\n  [VARIATION_2]: 0.325,\n}\n\nexport default {\n  ALLOCATION_TYPES,\n  CHART_LABELS,\n  MANUAL,\n  MIN_REGRET,\n  MIN_TIME,\n  NO_NO_NO,\n  NO_NO_YES,\n  NO_YES_NO,\n  NO_YES_YES,\n  ORIGINAL,\n  ORIG_ORIG_ORIG,\n  STATIC_ALLOCATION,\n  VAR1_VAR1_VAR1,\n  VAR2_VAR2_VAR2,\n  VARIATION_1,\n  VARIATION_2,\n  VARIATIONS,\n  YES_NO_NO,\n  YES_NO_YES,\n  YES_YES_NO,\n  YES_YES_YES,\n};\n","import _ from 'lodash';\n\nconst roundDist = (distribution) => {\n  return distribution.map((value) => {\n    return parseInt(value * 10000) / 100;\n  });\n}\n\nexport const getConfidenceNumbers = (jsonFile) => {\n  const confidences = [\n    {\n      pValues: [1, 1],\n      confidenceIntervals: [\n        [-Infinity, Infinity],\n        [-Infinity, Infinity],\n      ],\n    }\n  ];\n\n  jsonFile.forEach((visitor) => {\n    confidences.push({\n      pValues: [visitor.stats[1].pValue, visitor.stats[2].pValue],\n      confidenceIntervals: [visitor.stats[1].confInterval, visitor.stats[2].confInterval]\n    });\n  });\n\n  return confidences;\n};\n\nexport const getDistributions = (jsonFile) => {\n  const distributions = [roundDist(_.cloneDeep(jsonFile[0].trafficAllocation))];\n\n  jsonFile.forEach((visitor) => {\n    const roundedDist = roundDist(visitor.trafficAllocation);\n    distributions.push(roundedDist);\n  });\n\n  return distributions;\n};\n\nexport const getCounts = (jsonFile) => {\n  const visitorCounts = [{\n    conversions: [0, 0, 0],\n    visitors: [0, 0, 0],\n  }];\n\n  jsonFile.forEach((visitor) => {\n    const summaryObject = _.cloneDeep(visitorCounts[visitorCounts.length - 1]); \n    summaryObject.visitors[visitor.variation] = summaryObject.visitors[visitor.variation] + 1;\n    if (visitor.convert) {\n      summaryObject.conversions[visitor.variation] = summaryObject.conversions[visitor.variation] + 1;\n    }\n    visitorCounts.push(summaryObject);\n  });\n\n  return visitorCounts;\n};\n\nexport default {\n  getConfidenceNumbers,\n  getCounts,\n  getDistributions,\n};\n","import _ from 'lodash';\nimport classNames from 'class-names';\nimport React, { Component } from 'react';\nimport './App.css';\nimport Highcharts from 'highcharts';\nimport ReactHighcharts from 'react-highcharts';\nimport Slider from 'rc-slider';\nimport Icon from 'react-oui-icons';\n\nimport constants from './constants';\nimport fns from './fns';\nimport minRegret from './data/min_regret_sim_results.json';\nimport minTime from './data/min_time_sim_results.json';\nimport uniform from './data/uniform_sim_results.json';\n\nimport 'rc-slider/assets/index.css';\n\nclass DistributionChart extends Component {\n  getDistributionData = () => {\n    const {\n      distributions,\n      position,\n    } = this.props;\n\n    const series = [\n      {\n        name: 'Original',\n        data: [],\n        animation: {\n          duration: 0,\n        },\n      },\n      {\n        name: 'Variation 1',\n        data: [],\n        animation: {\n          duration: 0,\n        },\n      },\n      {\n        name: 'Variation 2',\n        data: [],\n        animation: {\n          duration: 0,\n        },\n      },\n    ];\n    distributions.forEach((distribution, index) => {\n      series[0].data.push(index <= position ? distribution[0] : null);\n      series[1].data.push(index <= position ? distribution[1] : null);\n      series[2].data.push(index <= position ? distribution[2] : null);\n    });\n    return _.cloneDeep(series);\n  }\n\n  render() {\n    const { policy } = this.props;\n\n    const chartRef = React.createRef();\n\n    const config = {\n      credits: {\n        enabled: false,\n      },\n      title: {\n        text: constants.CHART_LABELS[policy],\n      },\n      series: this.getDistributionData(),\n      yAxis: {\n        title: {\n          text: 'Distribution',\n        },\n      },\n    }\n\n    return (\n      <div className=\"flex--1\">\n        <ReactHighcharts\n          config={ config }\n          ref={ chartRef }\n        />\n      </div>\n    );\n  }\n}\n\nclass VariationCard extends Component {\n  render() {\n    const {\n      conversionCount,\n      title,\n      visitorCount,\n    } = this.props;\n\n    return (\n      <div className=\"flex flex--column flex-align--center soft--sides width--33\">\n        <h5>\n          { title }\n        </h5>\n        <p className=\"micro muted\">\n          Conversions\n        </p>\n        <h2>\n          { conversionCount }\n        </h2>\n        <p className=\"micro muted\">\n          Visitors\n        </p>\n        <h2>\n          { visitorCount }\n        </h2>\n      </div>\n    )\n  }\n}\n\nclass StatSigCard extends Component {\n  formatPValue = () => {\n    const { pValue } = this.props;\n\n    return ((1 - pValue) * 100).toFixed(2);\n  }\n\n  render() {\n    const {\n      confidenceInterval,\n      pValue,\n      title,\n    } = this.props;\n\n    return (\n      <div className=\"flex flex--column flex-align--center soft--sides width--50\">\n        <h5>\n          { title }\n        </h5>\n        <h2 className={ classNames({\n          green: pValue <= 0.10\n        }) }>\n          { this.formatPValue() }\n        </h2>\n      </div>\n    );\n  }\n}\n\nclass SummaryCard extends Component {\n  getVisitorCount = (variation) => {\n    const {\n      counts,\n      position,\n    } = this.props;\n\n    return counts[position].visitors[variation];\n  }\n\n  getConversionCount = (variation) => {\n    const {\n      counts,\n      position,\n    } = this.props;\n\n    return counts[position].conversions[variation];\n  }\n\n  getPValue = (variation) => {\n    const {\n      confidences,\n      position,\n    } = this.props;\n\n    return confidences[position].pValues[variation];\n  }\n\n  render() {\n    return (\n      <div className=\"border--left flex flex-align--center flex--column min-width--400\">\n        <div className=\"flex flex--row flex--space width--100\">\n          <VariationCard \n            conversionCount={ this.getConversionCount(0) }\n            title=\"Original\"\n            visitorCount={ this.getVisitorCount(0) }\n          />\n          <VariationCard \n            conversionCount={ this.getConversionCount(1) }\n            title=\"Variation 1\"\n            visitorCount={ this.getVisitorCount(1) }\n          />\n          <VariationCard \n            conversionCount={ this.getConversionCount(2) }\n            title=\"Variation 2\"\n            visitorCount={ this.getVisitorCount(2) }\n          />\n          <VariationCard\n            conversionCount={ this.getConversionCount(0) + this.getConversionCount(1) + this.getConversionCount(2) }\n            title=\"Total\"\n            visitorCount={ this.getVisitorCount(0) + this.getVisitorCount(1) + this.getVisitorCount(2) }\n          />\n        </div>\n        <h3 className=\"flex\">\n          Statistical Significance:\n        </h3>\n        <div className=\"flex flex--row flex--space width--100\">\n          <StatSigCard\n            pValue={ this.getPValue(0) }\n            title=\"Variation 1\"\n          />\n          <StatSigCard\n            pValue={ this.getPValue(1) }\n            title=\"Variation 2\"\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.minRegretDistributions = fns.getDistributions(minRegret);\n    this.minTimeDistributions = fns.getDistributions(minTime);\n    this.uniformDistributions = fns.getDistributions(uniform);\n    this.minRegretCounts = fns.getCounts(minRegret);\n    this.minTimeCounts = fns.getCounts(minTime);\n    this.uniformCounts = fns.getCounts(uniform);\n    this.minRegretConfidences = fns.getConfidenceNumbers(minRegret);\n    this.minTimeConfidences = fns.getConfidenceNumbers(minTime);\n    this.uniformConfidences = fns.getConfidenceNumbers(uniform);\n    this.maxVisitors = Math.max(this.minRegretDistributions.length, this.minTimeDistributions.length, this.uniformDistributions.length);\n  }\n\n  state = {\n    currentPosition: 0,\n    interval: null,\n    multiplier: 25,\n  };\n\n  setCurrentPosition = (position) => {\n    this.setState(() => {\n      return {\n        currentPosition: position\n      }\n    });\n  }\n\n  startCounting = () => {\n    if (this.state.currentPosition >= this.maxVisitors - 1) {\n      this.setState(() => {\n        return {\n          currentPosition: 0,\n        };\n      }, this.startInterval);\n    } else {\n      this.startInterval();\n    }\n  };\n\n  startInterval = () => {\n    this.setState(() => {\n      return {\n        interval: setInterval(() => {\n          if (this.state.currentPosition >= this.maxVisitors - 1) {\n            this.stopCounting();\n            return;\n          }\n          this.setState((_previousState) => {\n            return {\n              currentPosition: _previousState.currentPosition + _previousState.multiplier >= this.maxVisitors ? this.maxVisitors - 1 : _previousState.currentPosition + _previousState.multiplier,\n            };\n          });\n        }, 10),\n      }\n    });\n  }\n\n  stopCounting = () => {\n    clearInterval(this.state.interval);\n    this.setState(() => {\n      return {\n        interval: null,\n      };\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"soft--sides\">\n        <div className=\"push--ends flex flex--row flex-align--center width--100\">\n          <div className=\"push--right\">\n            { !this.state.interval && (\n              <button\n                className=\"no-padding\"\n                onClick={ this.startCounting }>\n                <div className=\"flex square--50 flex-align--center flex-justify--center\">\n                  { this.state.currentPosition !== this.maxVisitors - 1 && (\n                    <Icon\n                      name=\"play\"\n                      size=\"large\"\n                    />\n                  ) }\n                  { this.state.currentPosition === this.maxVisitors - 1 && (\n                    <Icon\n                      name=\"refresh\"\n                      size=\"large\"\n                    />\n                  ) }\n                </div>\n              </button>\n            ) }\n            { this.state.interval && (\n              <button\n                className=\"no-padding\"\n                onClick={ this.stopCounting }>\n                <div className=\"flex square--50 flex-align--center flex-justify--center\">\n                  <Icon\n                    name=\"pause\"\n                    size=\"large\"\n                  />\n                </div>\n              </button>\n              \n            ) }\n          </div>\n          <div className=\"flex flex--1 flex-align--center push--right\">\n            <Slider\n              dots={ false }\n              min={ 0 }\n              marks={ {\n                1766: {\n                  style: {\n                    color: 'green',\n                  } ,\n                  label: 'Min Time Significant',\n                },\n              } }\n              max={ this.maxVisitors - 1 }\n              onChange={ this.setCurrentPosition }\n              value={ this.state.currentPosition }\n            />\n          </div>\n        </div>\n        <div className=\"flex flex--row border push--ends\">\n          <DistributionChart\n            distributions={ this.uniformDistributions }\n            policy={ constants.MANUAL }\n            position={ this.state.currentPosition }\n          />\n          <SummaryCard\n            confidences={ this.uniformConfidences }\n            counts={ this.uniformCounts }\n            position={ this.state.currentPosition }\n          />\n        </div>\n        <div className=\"flex flex--row border push--ends\">\n          <DistributionChart\n            distributions={ this.minRegretDistributions }\n            policy={ constants.MIN_REGRET }\n            position={ this.state.currentPosition }\n          />\n          <SummaryCard\n            confidences={ this.minRegretConfidences }\n            counts={ this.minRegretCounts }\n            position={ this.state.currentPosition }\n          />\n        </div>\n        <div className=\"flex flex--row border push--ends\">\n          <DistributionChart\n            distributions={ this.minTimeDistributions }\n            policy={ constants.MIN_TIME }\n            position={ this.state.currentPosition }\n          />\n          <SummaryCard\n            confidences={ this.minTimeConfidences }\n            counts={ this.minTimeCounts }\n            position={ this.state.currentPosition }\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}