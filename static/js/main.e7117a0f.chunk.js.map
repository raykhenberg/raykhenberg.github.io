{"version":3,"sources":["constants.js","fns.js","components/distribution_chart/index.js","components/improvement_chart/index.js","components/stat_sig_card/index.js","components/variation_card/index.js","components/summary_card/index.js","App.js","serviceWorker.js","index.js"],"names":["constants","ALLOCATION_TYPES","MANUAL","MIN_REGRET","MIN_TIME","CHART_LABELS","_CHART_LABELS","Object","defineProperty","CHART_TYPES","DISTRIBUTEION","IMPROVEMENT","COLORS","roundDist","distribution","map","value","parseInt","fns","getConfidenceNumbers","jsonFile","variations","trafficAllocation","length","confidences","pValues","Array","fill","confidenceIntervals","Infinity","forEach","visitor","push","values","stats","statObject","pValue","confInterval","getCounts","visitorCounts","conversions","visitors","totalConversions","totalVisitors","counterfactualConversions","counterfactualRate","totalConversionRate","summaryObject","_","cloneDeep","variation","convert","x","fixedPercentage","computedPercentage","Number","isNaN","computeCounterfactualRate","computedConversions","computeCounterfactualConversions","getDistributions","sampleRate","arguments","undefined","initialPoints","distributions","index","visitorIndex","roundedDist","DistributionChart","getDistributionData","_this$props","_this","props","counterfactualEnabled","counts","position","showTotals","series","color","name","concat","data","slice","Math","ceil","animation","duration","conversionRateSeries","counterfactualRateSeries","dashStyle","lineWidth","marker","enabled","tooltip","split","valueDecimals","valueSuffix","type","yAxis","_this$props2","this","chartRef","policy","config","chart","height","width","credits","plotOptions","line","formatter","points","point","pointValue","y","suffix","includes","toFixed","title","text","xAxis","labels","min","max","endOnTick","area","fillOpacity","stacking","opposite","style","react_default","a","createElement","className","ReactHighcharts_default","ref","Component","ImprovementChart","StatSigCard","formatPValue","classNames","VariationCard","conversionCount","variationColor","visitorCount","SummaryCard","getVisitorCount","getConversionCount","getPValue","_this$props3","isBetterThanBaseline","baselineConversionRate","variationConversionRate","renderVariationCards","_this$props4","showVariationDetail","conversionTotal","visitorTotal","variation_card_VariationCard","key","renderStatSigCards","stat_sig_card_StatSigCard","_this$props5","hideGraphs","border--left","flex","flex-align--center","flex--column","soft","flex--space","toLowerCase","minWidth","Fragment","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","chartType","currentPosition","enabledCharts","interval","isRunning","marks","multiplier","showGuiders","getNextSignificantPoint","_this$state","significantPoints","keys","filter","mark","getPreviousSignificantPoint","_this$state2","toggleCounterfactual","setState","previousState","toggleSeries","chartRefs","current","visible","hide","show","toggleTotals","handleGraphTypeChange","event","target","handleKeyDown","keyCode","preventDefault","stopCounting","startCounting","toggleChart","setCurrentPosition","maxVisitors","toggleCharts","reset","isChartEnabled","setTimelineMarks","marksToDelete","entry","category","startInterval","setInterval","_previousState","clearInterval","charts","window","uniform","minRegretDistributions","minRegret","minTimeDistributions","minTime","uniformDistributions","minRegretCounts","minTimeCounts","uniformCounts","minRegretConfidences","minTimeConfidences","uniformConfidences","minRegretVariations","minTimeVariations","uniformVariations","minRegretRef","React","createRef","minTimeRef","uniformRef","0","label","significance","nextTick","varIndex","top","toString","isSignificant","lower","document","addEventListener","push-double--right","controls","checked","id","onChange","htmlFor","selected","onClick","dist_default","size","es","dots","flex--row","flex-justify--center","distribution_chart_DistributionChart","improvement_chart_ImprovementChart","summary_card_SummaryCard","react_joyride_es","continuous","steps","content","disableBeacon","placement","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e7117a0f.chunk.js","sourcesContent":["export const MANUAL = 'MANUAL';\nexport const MIN_REGRET = 'MIN_REGRET'; // Accelerated Impact\nexport const MIN_TIME = 'MIN_TIME'; // Accelerated Learning\n\nexport const ALLOCATION_TYPES = {\n  MANUAL,\n  MIN_REGRET,\n  MIN_TIME,\n}\n\nexport const CHART_LABELS = {\n  [MANUAL]: 'Standard A/B',\n  [MIN_REGRET]: 'Min Regret (Accelerated Impact)',\n  [MIN_TIME]: 'Min Time (Accelerated Learning)',\n}\n\nexport const CHART_TYPES = {\n  DISTRIBUTEION: 'DISTRIBUTION',\n  IMPROVEMENT: 'IMPROVEMENT',\n};\n\nexport const COLORS = [\n  '#ffda7c',\n  '#ff6090',\n  '#9a67ea',\n  '#6ec6ff',\n];\n\nexport default {\n  ALLOCATION_TYPES,\n  CHART_LABELS,\n  CHART_TYPES,\n  COLORS,\n  MANUAL,\n  MIN_REGRET,\n  MIN_TIME,\n};\n","import _ from 'lodash';\n\nconst roundDist = (distribution) => {\n  return distribution.map((value) => {\n    return parseInt(value * 10000) / 100;\n  });\n};\n\nconst computeCounterfactualRate = (summaryObject, variations) => {\n  const fixedPercentage = 1 / variations;\n  let computedPercentage = 0;\n  let x;\n  for (x = 0; x < variations; x++) {\n    computedPercentage += (summaryObject.conversions[x] / summaryObject.visitors[x]) * fixedPercentage;\n  }\n  return Number.isNaN(computedPercentage) ? 0 : computedPercentage * 100;\n};\n\nconst computeCounterfactualConversions = (summaryObject, variations) => {\n  const fixedPercentage = 1 / variations;\n  let computedConversions = 0;\n  let x;\n  for (x = 0; x < variations; x++) {\n    computedConversions += (summaryObject.conversions[x] / summaryObject.visitors[x]) * (fixedPercentage * summaryObject.totalVisitors);\n  }\n  return Number.isNaN(computedConversions) ? 0 : parseInt(computedConversions);\n};\n\nexport const getConfidenceNumbers = (jsonFile) => {\n  const variations = jsonFile[0].trafficAllocation.length - 1;\n  const confidences = [\n    {\n      pValues: Array(variations).fill(1),\n      confidenceIntervals: Array(variations).fill([-Infinity, Infinity]),\n    }\n  ];\n\n  jsonFile.forEach((visitor) => {\n    confidences.push({\n      pValues: Object.values(visitor.stats).map((statObject) => statObject.pValue),\n      confidenceIntervals: Object.values(visitor.stats).map((statObject) => statObject.confInterval),\n    });\n  });\n\n  return confidences;\n};\n\nexport const getCounts = (jsonFile) => {\n  const variations = jsonFile[0].trafficAllocation.length;\n  const visitorCounts = [{\n    conversions: Array(variations).fill(0),\n    visitors: Array(variations).fill(0),\n    totalConversions: 0,\n    totalVisitors: 0,\n    counterfactualConversions: 0,\n    counterfactualRate: 0,\n    totalConversionRate: 0,\n  }];\n\n  jsonFile.forEach((visitor) => {\n    const summaryObject = _.cloneDeep(visitorCounts[visitorCounts.length - 1]); \n    summaryObject.visitors[visitor.variation] = summaryObject.visitors[visitor.variation] + 1;\n    summaryObject.totalVisitors = summaryObject.totalVisitors + 1;\n    if (visitor.convert) {\n      summaryObject.conversions[visitor.variation] = summaryObject.conversions[visitor.variation] + 1;\n      summaryObject.totalConversions = summaryObject.totalConversions + 1;\n    }\n    summaryObject.counterfactualRate = computeCounterfactualRate(summaryObject, variations);\n    summaryObject.counterfactualConversions = computeCounterfactualConversions(summaryObject, variations);\n    summaryObject.totalConversionRate = Number.isNaN(summaryObject.totalConversions / summaryObject.totalVisitors) ? 0 : (summaryObject.totalConversions / summaryObject.totalVisitors) * 100;\n    visitorCounts.push(summaryObject);\n  });\n\n  return visitorCounts;\n};\n\nexport const getDistributions = (jsonFile, sampleRate = 1) => {\n  const variations = Array(jsonFile[0].trafficAllocation.length).fill([]);\n  const initialPoints = roundDist(_.cloneDeep(jsonFile[0].trafficAllocation));\n  const distributions = [];\n  variations.forEach((variation, index) => {\n    distributions[index] = [initialPoints[index]];\n  });\n\n  jsonFile.forEach((visitor, visitorIndex) => {\n    const roundedDist = roundDist(visitor.trafficAllocation);\n    variations.forEach((variation, index) => {\n      if (!(visitorIndex % sampleRate)) {\n        distributions[index].push(roundedDist[index]);\n      }\n    });\n  });\n\n  return distributions;\n};\n\nexport default {\n  getConfidenceNumbers,\n  getCounts,\n  getDistributions,\n};\n","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport ReactHighcharts from 'react-highcharts';\n\nimport constants from '../../constants';\n\nexport default class DistributionChart extends Component {\n  getDistributionData = () => {\n    const {\n      counterfactualEnabled,\n      counts,\n      distributions,\n      position,\n      sampleRate,\n      showTotals,\n      variations,\n    } = this.props;\n\n    const series = [];\n    \n    Array(variations).fill(1).forEach((value, index) => {\n      series.push({\n        color: constants.COLORS[index],\n        name: !!index ? `Variation ${index}` : 'Original',\n        data: distributions[index].slice(0, Math.ceil(position / sampleRate) + 1),\n        animation: {\n          duration: 0,\n        },\n      })\n    });\n    \n    if (counterfactualEnabled) {\n      const conversionRateSeries = [];\n      const counterfactualRateSeries = [];\n      const totalConversions = [];\n      const counterfactualConversions = [];\n      let index = 0;\n      while (index <= position) {\n        conversionRateSeries.push(counts[index].totalConversionRate);\n        counterfactualRateSeries.push(counts[index].counterfactualRate);\n        totalConversions.push(counts[index].totalConversions);\n        counterfactualConversions.push(counts[index].counterfactualConversions);\n        index += sampleRate;\n      }\n\n      series.push({\n        animation: {\n          duration: 0,\n        },\n        color: 'black',\n        dashStyle: 'solid',\n        data: conversionRateSeries,\n        lineWidth: 2,\n        marker: {\n          enabled: false\n        },\n        name: 'Total Conversion Rate',\n        tooltip: {\n          split: true,\n          valueDecimals: 2,\n          valueSuffix: '%',\n        },\n        type: 'spline',\n        yAxis: 1,\n      });\n\n      series.push({\n        animation: {\n          duration: 0,\n        },\n        color: 'black',\n        dashStyle: 'shortdot',\n        data: counterfactualRateSeries,\n        lineWidth: 2,\n        marker: {\n          enabled: false\n        },\n        name: 'Counterfactual Conversion Rate',\n        tooltip: {\n          split: true,\n          valueDecimals: 2,\n          valueSuffix: '%',\n        },\n        type: 'spline',\n        yAxis: 1,\n      });\n\n      if (showTotals) {\n        series.push({\n          animation: {\n            duration: 0,\n          },\n          color: 'white',\n          data: totalConversions,\n          lineWidth: 2,\n          marker: {\n            enabled: false\n          },\n          name: 'Total Conversions',\n          tooltip: {\n            split: true,\n          },\n          type: 'spline',\n          yAxis: 2,\n        });\n\n        series.push({\n          animation: {\n            duration: 0,\n          },\n          color: 'white',\n          dashStyle: 'shortdot',\n          data: counterfactualConversions,\n          lineWidth: 2,\n          marker: {\n            enabled: false\n          },\n          name: 'Counterfactual Conversions',\n          tooltip: {\n            split: true,\n          },\n          type: 'spline',\n          yAxis: 2,\n        });\n      }\n    }\n\n    return _.cloneDeep(series);\n  }\n\n  render() {\n    const {\n      chartRef,\n      counterfactualEnabled,\n      distributions,\n      policy,\n      sampleRate,\n      showTotals,\n    } = this.props;\n\n    let config = {\n      chart: {\n        // backgroundColor: 'lightgray',\n        height: null,\n        // style: {\n        //   minWidth: '950px',\n        // },\n        type: counterfactualEnabled ? 'area' : 'line',\n        width: null,\n      },\n      credits: {\n        enabled: false,\n      },\n      plotOptions: {\n        line: {\n          marker: {\n            enabled: false,\n          },\n        },\n      },\n      tooltip: {\n        formatter: function () {\n          // The first returned item is the header, subsequent items are the\n          // points\n          return ['<b>' + this.x * sampleRate + ' visitors</b>'].concat(\n            this.points.map(function (point) {\n              let pointValue = point.y;\n              let suffix = '% of Traffic';\n              if (point.series.name.includes('Rate')) {\n                suffix = '%';\n              }\n              if (!point.series.name.includes('Conversions')) {\n                pointValue = Number(point.y).toFixed(2) + suffix;\n              }\n              return point.series.name + ': ' + pointValue;\n            })\n          );\n        },\n        split: true,\n        valueSuffix: '% of Traffic',\n      },\n      series: this.getDistributionData(),\n      title: {\n        text: constants.CHART_LABELS[policy],\n      },\n      xAxis: {\n        labels: {\n          formatter: function() {\n            return this.value * sampleRate;\n          }\n        },\n        min: 0,\n        max: parseInt(distributions[0].length),\n        title: {\n          text: 'Visitors',\n        }\n      },\n      yAxis: [\n        {\n          endOnTick: true,\n          labels: {\n            formatter: function() {\n              return this.value + '%';\n            },\n          },\n          title: {\n            text: 'Distribution',\n          },\n        },\n      ],\n    }\n\n    if (counterfactualEnabled) {\n      config.plotOptions = {\n        area: {\n          lineWidth: 0,\n          fillOpacity: 1,\n          marker: {\n            enabled: false\n          },\n          stacking: 'percent',\n        },\n      }\n\n      config.yAxis.push({\n        opposite: true,\n        labels: {\n          formatter: function() {\n            return this.value + '%';\n          },\n        },\n        max: 60,\n        min: 40,\n        title: {\n          style: {\n            color: 'black',\n          },\n          text: 'Conversion Rate',\n        },\n      })\n    }\n\n    if (showTotals) {\n      config.yAxis.push({\n        opposite: true,\n        // max: 12000,\n        title: {\n          style: {\n            color: 'white',\n          },\n          text: 'Conversions',\n        },\n      });\n    }\n\n    return (\n      <div className=\"flex--1\">\n        <ReactHighcharts\n          config={ config }\n          ref={ chartRef }\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport ReactHighcharts from 'react-highcharts';\n\nimport constants from '../../constants';\n\nexport default class ImprovementChart extends Component {\n  getDistributionData = () => {\n    const {\n      counts,\n      position,\n      sampleRate,\n    } = this.props;\n\n    const series = [];\n    const data = [];\n    let index = 0;\n\n    while (index <= position) {\n      data.push(counts[index].totalConversionRate - counts[index].counterfactualRate);\n      index += sampleRate;\n    }\n\n    series.push({\n      animation: {\n        duration: 0,\n      },\n      color: 'black',\n      dashStyle: 'solid',\n      data,\n      lineWidth: 2,\n      marker: {\n        enabled: false\n      },\n      name: 'Improvement Over Equal Allocation',\n      tooltip: {\n        valueDecimals: 2,\n        valueSuffix: '%',\n      },\n      type: 'spline',\n    });\n\n    return series;\n  };\n\n  render() {\n    const {\n      chartRef,\n      distributions,\n      policy,\n      sampleRate,\n    } = this.props;\n\n    let config = {\n      chart: {\n        type: 'line',\n      },\n      credits: {\n        enabled: false,\n      },\n      plotOptions: {\n        line: {\n          marker: {\n            enabled: false,\n          },\n        },\n      },\n      series: this.getDistributionData(),\n      title: {\n        text: constants.CHART_LABELS[policy],\n      },\n      xAxis: {\n        labels: {\n          formatter: function() {\n            return this.value * sampleRate;\n          }\n        },\n        min: 0,\n        max: parseInt(distributions[0].length),\n        title: {\n          text: 'Visitors',\n        }\n      },\n      yAxis: [\n        {\n          endOnTick: true,\n          labels: {\n            formatter: function() {\n              if (this.value === 0) {\n                return 'Equal Allocation';\n              }\n              return this.value + '%';\n            },\n          },\n          title: {\n            text: 'Improvement',\n          },\n        },\n      ],\n    }\n\n    return (\n      <div className=\"flex--1\">\n        <ReactHighcharts\n          config={ config }\n          ref={ chartRef }\n        />\n      </div>\n    )\n  }\n}","import classNames from 'class-names';\nimport React, { Component } from 'react';\n\nexport default class StatSigCard extends Component {\n  formatPValue = () => {\n    const { pValue } = this.props;\n\n    return `${ ((1 - pValue) * 100).toFixed(2) }%`;\n  }\n\n  render() {\n    const {\n      color,\n      pValue,\n      title,\n    } = this.props;\n\n    return (\n      <div className=\"flex flex--column flex-align--center soft--sides width--50\">\n        <h5>\n          { title }\n        </h5>\n        <h3 className={ classNames({\n          [color]: pValue <= 0.10\n        }) }>\n          { this.formatPValue() }\n        </h3>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class VariationCard extends Component {\n  render() {\n    const {\n      color,\n      conversionCount,\n      title,\n      variationColor,\n      visitorCount,\n    } = this.props;\n\n    return (\n      <div\n        className=\"flex flex--column flex-align--center soft--sides\">\n        <h5 style={ { 'color': variationColor } }>\n          { title }\n        </h5>\n        <p className=\"micro muted\">\n          Conversions\n        </p>\n        <h3 className={ `${color}` }>\n          { conversionCount }\n        </h3>\n        <p className=\"micro muted\">\n          Visitors\n        </p>\n        <h3 className={ `${color}` }>\n          { visitorCount }\n        </h3>\n        <p className=\"micro muted\">\n          Conversion Rate\n        </p>\n        <h3 className={ `${color}` }>\n          { `${visitorCount ? ((conversionCount / visitorCount) * 100).toFixed(2) : '0.00'}%` }\n        </h3>\n      </div>\n    )\n  }\n}","import classNames from 'class-names';\nimport React, { Component } from 'react';\n\nimport constants from '../../constants';\n\nimport StatSigCard from '../stat_sig_card';\nimport VariationCard from '../variation_card';\n\nexport default class SummaryCard extends Component {\n  getVisitorCount = (variation) => {\n    const {\n      counts,\n      position,\n    } = this.props;\n\n    return counts[position].visitors[variation];\n  }\n\n  getConversionCount = (variation) => {\n    const {\n      counts,\n      position,\n    } = this.props;\n\n    return counts[position].conversions[variation];\n  }\n\n  getPValue = (variation) => {\n    const {\n      confidences,\n      position,\n    } = this.props;\n\n    return confidences[position].pValues[variation];\n  }\n\n  isBetterThanBaseline = (variation) => {\n    const baselineConversionRate = this.getConversionCount(0) / this.getVisitorCount(0);\n    const variationConversionRate = this.getConversionCount(variation) / this.getVisitorCount(variation);\n    return Number.isNaN(baselineConversionRate) || Number.isNaN(variationConversionRate) ? false : variationConversionRate > baselineConversionRate;\n  };\n\n  renderVariationCards = () => {\n    const {\n      showVariationDetail,\n      variations,\n    } = this.props;\n\n    let conversionTotal = 0;\n    let visitorTotal = 0;\n\n    return Array(variations + 1).fill(1).map((value, index) => {\n      if (index < variations) {\n        conversionTotal += this.getConversionCount(index);\n        visitorTotal += this.getVisitorCount(index);\n      }\n      if (!index && showVariationDetail) {\n        return (\n          <VariationCard\n            color=\"black\"\n            conversionCount={ this.getConversionCount(0) }\n            key={ index }\n            title=\"Original\"\n            variationColor={ constants.COLORS[index] }\n            visitorCount={ this.getVisitorCount(0) }\n          />\n        );\n      } else if (index === variations) {\n        return (\n          <VariationCard\n            color=\"black\"\n            conversionCount={ conversionTotal }\n            key={ index }\n            title=\"Total\"\n            variationColor='black'\n            visitorCount={ visitorTotal }\n          />\n        );\n      } else if (showVariationDetail) {\n        return (\n          <VariationCard \n            color={ this.getPValue(index - 1) <= 0.10 ? this.isBetterThanBaseline(index) ? 'green' : 'red' : 'black' }\n            conversionCount={ this.getConversionCount(index) }\n            key={ index }\n            title={ `Variation ${index}` }\n            variationColor={ constants.COLORS[index] }\n            visitorCount={ this.getVisitorCount(index) }\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n\n  renderStatSigCards = () => {\n    const { variations } = this.props;\n\n    return Array(variations - 1).fill(1).map((value, index) => {\n      return (\n        <StatSigCard\n          color={ this.isBetterThanBaseline(index + 1) ? 'green' : 'red' }\n          key={ index }\n          pValue={ this.getPValue(index) }\n          title={ `Variation ${index + 1}` }\n        />\n      )\n    });\n  };\n\n  render() {\n    const {\n      hideGraphs,\n      policy,\n      showVariationDetail,\n      variations,\n    } = this.props;\n    return (\n      <div\n        className={ classNames({\n          \"border--left\": !hideGraphs,\n          \"flex\": true,\n          \"flex-align--center\": true,\n          \"flex--column\": true,\n          \"soft\": hideGraphs,\n          \"flex--space\": true,\n          [policy.toLowerCase()]: true,\n        }) }\n        style={ {\n          minWidth: `${125 * (showVariationDetail ? variations : 1)}px`,\n        } }\n      >\n        { hideGraphs && (\n          <h1>{ constants.CHART_LABELS[policy] }</h1>\n        ) }\n        <div className=\"flex flex--row flex--space width--100\">\n          { this.renderVariationCards() }\n        </div>\n        { showVariationDetail && (\n          <React.Fragment>\n            <h4 className=\"flex\">\n              Statistical Significance:\n            </h4>\n            <div className=\"flex flex--row flex--space width--100\">\n              { this.renderStatSigCards() }\n            </div>\n          </React.Fragment>\n        ) }\n      </div>\n    )\n  }\n}","import _ from 'lodash';\nimport classNames from 'class-names';\nimport React, { Component } from 'react';\nimport './App.css';\nimport Slider from 'rc-slider';\nimport Icon from 'react-oui-icons';\nimport Joyride from 'react-joyride';\n\nimport constants from './constants';\nimport fns from './fns';\n\nimport DistributionChart from './components/distribution_chart';\nimport ImprovementChart from './components/improvement_chart';\nimport SummaryCard from './components/summary_card';\n\nimport 'rc-slider/assets/index.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.sampleRate = window.uniform.length / 500;\n    this.minRegretDistributions = fns.getDistributions(window.minRegret, this.sampleRate);\n    this.minTimeDistributions = fns.getDistributions(window.minTime, this.sampleRate);\n    this.uniformDistributions = fns.getDistributions(window.uniform, this.sampleRate);\n    this.minRegretCounts = fns.getCounts(window.minRegret);\n    this.minTimeCounts = fns.getCounts(window.minTime);\n    this.uniformCounts = fns.getCounts(window.uniform);\n    this.minRegretConfidences = fns.getConfidenceNumbers(window.minRegret);\n    this.minTimeConfidences = fns.getConfidenceNumbers(window.minTime);\n    this.uniformConfidences = fns.getConfidenceNumbers(window.uniform);\n    this.maxVisitors = Math.max(window.minRegret.length, window.minTime.length, window.uniform.length);\n    this.minRegretVariations = window.minRegret[0].trafficAllocation.length;\n    this.minTimeVariations = window.minTime[0].trafficAllocation.length;\n    this.uniformVariations = window.uniform[0].trafficAllocation.length;\n    this.chartRefs = {\n      minRegretRef: React.createRef(),\n      minTimeRef: React.createRef(),\n      uniformRef: React.createRef(),\n    }\n    this.marks = {\n      0: {\n        style: {\n          color: 'grey',\n        },\n        label: 'Start',\n        category: 'ALL',\n      },\n      [this.maxVisitors]: {\n        style: {\n          color: 'grey',\n        },\n        label: 'End',\n        category: 'ALL',\n      },\n    };\n    const significance = {\n      'minRegret': new Array(this.minRegretVariations - 1).fill(false),\n      'minTime': new Array(this.minTimeVariations - 1).fill(false),\n      'uniform': new Array(this.uniformVariations - 1).fill(false),\n    }\n\n    for (let index = 0; index < this.maxVisitors; index++) {\n      const nextTick =  index + (this.sampleRate - index % this.sampleRate) + this.sampleRate * 2;\n      if (index) {\n        for (let varIndex = 0; varIndex < this.minRegretVariations; varIndex++) {\n          if (window.minTime[index].trafficAllocation[varIndex] / window.minTime[index - 1].trafficAllocation[varIndex] < .10) {\n            this.marks[nextTick] = {\n              style: {\n                color: 'gray',\n                top: '-35px',\n              },\n              label: 'Min Time Reallocation',\n              category: constants.MIN_TIME,\n              key: nextTick,\n            }\n          }\n        }\n      }\n      for (let varIndex = 0; varIndex < this.uniformVariations - 1; varIndex++) {\n        if (significance.minRegret[varIndex] !== window.minRegret[index].stats[(varIndex + 1).toString()].isSignificant) {\n          if (window.minRegret[index].stats[(varIndex + 1).toString()].confInterval.lower > 0) {\n            this.marks[nextTick] = {\n              style: {\n                color: 'green',\n              },\n              label: 'Min Regret Significant',\n              category: constants.MIN_REGRET,\n              key: nextTick,\n            }\n          } else {\n            this.marks[nextTick] = {\n              style: {\n                color: 'red',\n              },\n              label: 'Min Regret Significant',\n              category: constants.MIN_REGRET,\n              key: nextTick,\n            }\n          }\n          significance.minRegret[varIndex] = !significance.minRegret[varIndex];\n        }\n\n        if (significance.minTime[varIndex] !== window.minTime[index].stats[(varIndex + 1).toString()].isSignificant) {\n          if (window.minTime[index].stats[(varIndex + 1).toString()].confInterval.lower > 0) {\n            this.marks[nextTick] = {\n              style: {\n                color: 'green',\n              },\n              label: 'Min Time Significant',\n              category: constants.MIN_TIME,\n              key: nextTick,\n            }\n          } else {\n            this.marks[nextTick] = {\n              style: {\n                color: 'red',\n              },\n              label: 'Min Time Significant',\n              category: constants.MIN_TIME,\n              key: nextTick,\n            }\n          }\n          significance.minTime[varIndex] = !significance.minTime[varIndex];\n        }\n\n        if (significance.uniform[varIndex] !== window.uniform[index].stats[(varIndex + 1).toString()].isSignificant) {\n          if (window.uniform[index].stats[(varIndex + 1).toString()].confInterval.lower > 0) {\n            this.marks[nextTick] = {\n              style: {\n                color: 'green',\n              },\n              label: 'A/B Test Significant',\n              category: constants.MANUAL,\n              key: nextTick,\n            }\n          } else {\n            this.marks[nextTick] = {\n              style: {\n                color: 'red',\n              },\n              label: 'A/B Test Significant',\n              category: constants.MANUAL,\n              key: nextTick,\n            }\n          }\n          significance.uniform[varIndex] = !significance.uniform[varIndex];\n        }\n      }\n    }\n  }\n\n  state = {\n    chartType: constants.CHART_TYPES.DISTRIBUTEION,\n    counterfactualEnabled: false,\n    currentPosition: 0,\n    enabledCharts: [constants.MANUAL],\n    hideGraphs: false,\n    interval: null,\n    isRunning: false,\n    marks: {},\n    multiplier: 100,\n    showGuiders: false,\n    showTotals: true,\n  };\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKeyDown);\n    this.setTimelineMarks();\n  }\n\n  getNextSignificantPoint = () => {\n    const {\n      currentPosition,\n      marks,\n    } = this.state;\n    const significantPoints = Object.keys(marks).filter(mark => mark > currentPosition);\n    return significantPoints.length ? Number(significantPoints[0]) : currentPosition;\n  };\n\n  getPreviousSignificantPoint = () => {\n    const {\n      currentPosition,\n      marks,\n    } = this.state;\n    const significantPoints = Object.keys(marks).filter(mark => mark < currentPosition);\n    return significantPoints.length ? Number(significantPoints[significantPoints.length - 1]) : currentPosition;\n  };\n\n  toggleCounterfactual = () => {\n    this.setState((previousState) => {\n      return {\n        counterfactualEnabled: !previousState.counterfactualEnabled,\n      };\n    });\n  };\n\n  toggleSeries = (index) => {\n    Object.values(this.chartRefs).forEach((ref) => {\n      if (ref.current && ref.current.chart.series[index].visible) {\n        ref.current.chart.series[index].hide();\n      } else if (ref.current && !ref.current.chart.series[index].visible) {\n        ref.current.chart.series[index].show();\n      }\n    });\n  };\n\n  toggleTotals = () => {\n    this.setState((previousState) => {\n      return {\n        showTotals: !previousState.showTotals,\n      };\n    });\n  };\n\n  handleGraphTypeChange = (event) => {\n    const chartType = event.target.value;\n    this.setState(() => {\n      return {\n        chartType,\n      };\n    });\n  };\n\n  handleKeyDown = (event) => {\n    switch( event.keyCode ) {\n      case 32:\n        event.preventDefault();\n        if (this.state.isRunning) {\n          this.stopCounting();\n        } else {\n          this.startCounting();\n        }\n        break;\n      case 48:\n        this.toggleSeries(0);\n        break;\n      case 49:\n        this.toggleSeries(1);\n        break;\n      case 50:\n        this.toggleSeries(2);\n        break;\n      case 51:\n        this.toggleSeries(3);\n        break;\n      case 65:\n        this.toggleChart({ target: { value: constants.MANUAL } });\n        break;\n      case 67:\n        this.toggleCounterfactual();\n        break;\n      case 69:\n        this.stopCounting();\n        this.setCurrentPosition(this.maxVisitors);\n        break;\n      case 71:\n        this.toggleCharts();\n        break;\n      case 73:\n        this.toggleChart({ target: { value: constants.MIN_REGRET } });\n        break;\n      case 76:\n        this.toggleChart({ target: { value: constants.MIN_TIME } });\n        break;\n      case 78:\n        this.stopCounting();\n        this.setCurrentPosition(this.getNextSignificantPoint());\n        break;\n      case 80:\n        this.stopCounting();\n        this.setCurrentPosition(this.getPreviousSignificantPoint());\n        break;\n      case 82:\n        this.reset();\n        break;\n      case 84:\n        this.toggleTotals();\n        break;\n      case 85:\n        this.setState((previousState) => {\n          return {\n            showGuiders: !previousState.showGuiders,\n          };\n        });\n        break;\n      default: \n        break;\n    }\n  };\n\n  isChartEnabled = (chartType) => {\n    return this.state.enabledCharts.includes(chartType);\n  };\n\n  reset = () => {\n    this.stopCounting();\n    this.setCurrentPosition(0);\n  }\n\n  setCurrentPosition = (position) => {\n    this.setState(() => {\n      return {\n        currentPosition: position\n      }\n    });\n  };\n\n  setTimelineMarks = () => {\n    let marks = _.cloneDeep(this.marks)\n    const marksToDelete = [];\n\n    Object.values(constants.ALLOCATION_TYPES).forEach((type) => {\n      if (!this.isChartEnabled(type)) {\n        _.map(marks, (entry) => {\n          if (entry.category === type) {\n            marksToDelete.push(entry.key);\n          }\n        });\n      }\n    });\n\n    marksToDelete.forEach((key) => {\n      delete marks[key];\n    });\n\n    this.setState(() => {\n      return {\n        marks,\n      };\n    });\n  };\n\n  startCounting = () => {\n    if (this.state.currentPosition >= this.maxVisitors) {\n      this.setState(() => {\n        return {\n          currentPosition: 0,\n        };\n      }, this.startInterval);\n    } else {\n      this.startInterval();\n    }\n    this.setState(() => {\n      return {\n        isRunning: true,\n      };\n    });\n  };\n\n  startInterval = () => {\n    this.setState(() => {\n      return {\n        interval: setInterval(() => {\n          if (this.state.currentPosition >= this.maxVisitors) {\n            this.stopCounting();\n            return;\n          }\n          this.setState((_previousState) => {\n            return {\n              currentPosition: _previousState.currentPosition + _previousState.multiplier >= this.maxVisitors ? this.maxVisitors : _previousState.currentPosition + _previousState.multiplier,\n            };\n          });\n        }, 100),\n      }\n    });\n  };\n\n  stopCounting = () => {\n    clearInterval(this.state.interval);\n    this.setState(() => {\n      return {\n        interval: null,\n        isRunning: false,\n      };\n    });\n  };\n\n  toggleChart = (event) => {\n    const chartType = event.target.value;\n\n    if (this.state.enabledCharts.includes(chartType)) {\n      const charts = _.cloneDeep(this.state.enabledCharts);\n      this.setState(() => {\n        return {\n          enabledCharts: charts.filter(type => type !== chartType),\n        };\n      }, this.setTimelineMarks);\n    } else {\n      this.setState((previousState) => {\n        const charts = _.cloneDeep(previousState.enabledCharts)\n        charts.push(chartType);\n        return {\n          enabledCharts: charts,\n        };\n      }, this.setTimelineMarks);\n    }\n  };\n\n  toggleCharts = (event) => {\n    this.setState((previousState) => {\n      return {\n        hideGraphs: !previousState.hideGraphs,\n      }\n    })\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n      <div className=\"soft--sides\">\n        <div className=\"push--ends flex flex--row flex-align--center width--100\">\n          <div className={ classNames({\n            'push-double--right': true,\n            'flex': true,\n            'flex--column': true,\n            'controls': true,\n          }) }>\n            <div className=\"flex--row micro\">\n              <input\n                checked={ this.isChartEnabled(constants.MANUAL) }\n                id={ constants.MANUAL }\n                onChange={ this.toggleChart }\n                type=\"checkbox\"\n                value={ constants.MANUAL }\n              />\n              <label htmlFor={ constants.MANUAL }>\n                A/B\n              </label>\n            </div>\n            <div className=\"flex--row micro\">\n              <input\n                checked={ this.isChartEnabled(constants.MIN_REGRET) }\n                id={ constants.MIN_REGRET }\n                onChange={ this.toggleChart }\n                type=\"checkbox\"\n                value={ constants.MIN_REGRET }\n              />\n              <label htmlFor={ constants.MIN_REGRET }>\n                Min Regret\n              </label>\n            </div>\n            <div className=\"flex--row micro\">\n              <input\n                checked={ this.isChartEnabled(constants.MIN_TIME) }\n                id={ constants.MIN_TIME }\n                onChange={ this.toggleChart }\n                type=\"checkbox\"\n                value={ constants.MIN_TIME }\n              />\n              <label htmlFor={ constants.MIN_TIME }>\n                Min Time\n              </label>\n            </div>\n            <div className=\"flex--row micro\">\n              <input\n                checked={ this.state.hideGraphs }\n                id=\"charts\"\n                onChange={ this.toggleCharts }\n                type=\"checkbox\"\n              />\n              <label htmlFor=\"charts\">\n                Hide Graphs\n              </label>\n            </div>\n            <div className=\"flex--row micro\">\n              <label htmlFor=\"chartType\">\n                Chart Type:\n              </label>\n            </div>\n            <div className=\"flex--row micro\">\n              <select\n                id=\"chartType\"\n                onChange={ this.handleGraphTypeChange }>\n                <option\n                  selected={ this.state.chartType === constants.CHART_TYPES.DISTRIBUTEION }\n                  value={ constants.CHART_TYPES.DISTRIBUTEION }>\n                  Distribution\n                </option>\n                <option\n                  selected={ this.state.chartType === constants.CHART_TYPES.IMPROVEMENT }\n                  value={ constants.CHART_TYPES.IMPROVEMENT }>\n                    Improvement\n                  </option>\n              </select>\n            </div>\n          </div>\n          <div className=\"push-double--right\">\n            { !this.state.interval && (\n              <button\n                className=\"no-padding\"\n                onClick={ this.startCounting }>\n                <div className=\"flex square--50 flex-align--center flex-justify--center\">\n                  { this.state.currentPosition !== this.maxVisitors && (\n                    <Icon\n                      name=\"play\"\n                      size=\"large\"\n                    />\n                  ) }\n                  { this.state.currentPosition === this.maxVisitors && (\n                    <Icon\n                      name=\"refresh\"\n                      size=\"large\"\n                    />\n                  ) }\n                </div>\n              </button>\n            ) }\n            { this.state.interval && (\n              <button\n                className=\"no-padding\"\n                onClick={ this.stopCounting }>\n                <div className=\"flex square--50 flex-align--center flex-justify--center\">\n                  <Icon\n                    name=\"pause\"\n                    size=\"large\"\n                  />\n                </div>\n              </button>\n            ) }\n          </div>\n          <div className=\"flex flex--1 flex-align--center push-double--right\">\n            <Slider\n              dots={ false }\n              min={ 0 }\n              marks={ this.state.marks }\n              max={ this.maxVisitors }\n              onChange={ this.setCurrentPosition }\n              value={ this.state.currentPosition }\n            />\n          </div>\n        </div>\n        <div className={ classNames({\n          'flex': this.state.hideGraphs,\n          'flex--row': this.state.hideGraphs,\n          'flex-justify--center': this.state.hideGraphs,\n          'flex--space': this.state.hideGraphs,\n        }) }>\n          { this.isChartEnabled(constants.MANUAL) && (\n            <div className=\"flex flex--row border push--ends\">\n              { !this.state.hideGraphs && (\n                <React.Fragment>\n                  { this.state.chartType === constants.CHART_TYPES.DISTRIBUTEION && (\n                    <DistributionChart\n                      chartRef={ this.chartRefs.uniformRef }\n                      counterfactualEnabled={ this.state.counterfactualEnabled }\n                      counts={ this.uniformCounts }\n                      distributions={ this.uniformDistributions }\n                      policy={ constants.MANUAL }\n                      position={ this.state.currentPosition }\n                      sampleRate={ this.sampleRate }\n                      showTotals={ this.state.showTotals }\n                      variations={ this.uniformVariations }\n                    />\n                  ) }\n                { this.state.chartType === constants.CHART_TYPES.IMPROVEMENT && (\n                  <ImprovementChart\n                    chartRef={ this.chartRefs.uniformRef }\n                    counts={ this.uniformCounts }\n                    distributions={ this.uniformDistributions }\n                    policy={ constants.MANUAL }\n                    position={ this.state.currentPosition }\n                    sampleRate={ this.sampleRate }\n                  />\n                ) }\n              </React.Fragment>\n              ) }\n              <SummaryCard\n                className=\"manual\"\n                confidences={ this.uniformConfidences }\n                counts={ this.uniformCounts }\n                hideGraphs={ this.state.hideGraphs }\n                policy={ constants.MANUAL }\n                position={ this.state.currentPosition }\n                showVariationDetail={ true }\n                variations={ this.uniformVariations }\n              />\n            </div>\n          ) }\n          { this.isChartEnabled(constants.MIN_REGRET) && (\n            <div className=\"flex flex--row border push--ends\">\n              { !this.state.hideGraphs && (\n                <React.Fragment>\n                  { this.state.chartType === constants.CHART_TYPES.DISTRIBUTEION && (\n                    <DistributionChart\n                      chartRef={ this.chartRefs.minRegretRef }\n                      counterfactualEnabled={ this.state.counterfactualEnabled }\n                      counts={ this.minRegretCounts }\n                      distributions={ this.minRegretDistributions }\n                      policy={ constants.MIN_REGRET }\n                      position={ this.state.currentPosition }\n                      sampleRate={ this.sampleRate }\n                      showTotals={ this.state.showTotals }\n                      variations={ this.minRegretVariations }\n                    />\n                  ) }\n                  { this.state.chartType === constants.CHART_TYPES.IMPROVEMENT && (\n                    <ImprovementChart\n                      chartRef={ this.chartRefs.minRegretRef }\n                      counts={ this.minRegretCounts }\n                      distributions={ this.minRegretDistributions }\n                      policy={ constants.MIN_REGRET }\n                      position={ this.state.currentPosition }\n                      sampleRate={ this.sampleRate }\n                    />\n                  ) }\n                </React.Fragment>\n              ) }\n              <SummaryCard\n                confidences={ this.minRegretConfidences }\n                counts={ this.minRegretCounts }\n                hideGraphs={ this.state.hideGraphs }\n                policy={ constants.MIN_REGRET }\n                position={ this.state.currentPosition }\n                showVariationDetail={ true }\n                variations={ this.minRegretVariations }\n              />\n            </div>\n          ) }\n          { this.isChartEnabled(constants.MIN_TIME) && (\n            <div className=\"flex flex--row border push--ends\">\n              { !this.state.hideGraphs && (\n                <React.Fragment>\n                  { this.state.chartType === constants.CHART_TYPES.DISTRIBUTEION && (\n                    <DistributionChart\n                      chartRef={ this.chartRefs.minTimeRef }\n                      counterfactualEnabled={ this.state.counterfactualEnabled }\n                      counts={ this.minTimeCounts }\n                      distributions={ this.minTimeDistributions }\n                      policy={ constants.MIN_TIME }\n                      position={ this.state.currentPosition }\n                      sampleRate={ this.sampleRate }\n                      showTotals={ this.state.showTotals }\n                      variations={ this.minTimeVariations }\n                    />\n                  ) }\n                  { this.state.chartType === constants.CHART_TYPES.IMPROVEMENT && (\n                    <ImprovementChart\n                      chartRef={ this.chartRefs.minTimeRef }\n                      counts={ this.minTimeCounts }\n                      distributions={ this.minTimeDistributions }\n                      policy={ constants.MIN_TIME }\n                      position={ this.state.currentPosition }\n                      sampleRate={ this.sampleRate }\n                    />\n                  ) }\n                </React.Fragment>\n              ) }\n              <SummaryCard\n                confidences={ this.minTimeConfidences }\n                counts={ this.minTimeCounts }\n                hideGraphs={ this.state.hideGraphs }\n                policy={ constants.MIN_TIME }\n                position={ this.state.currentPosition }\n                showVariationDetail={ true }\n                variations={ this.minTimeVariations }\n              />\n            </div>\n          ) }\n        </div>\n      </div>\n      { this.state.showGuiders && (\n        <Joyride\n          continuous={ true }\n          steps={ [\n            {\n              content: 'Welcome to the Stats Accelerator (Multi-armed bandit) demo',\n              disableBeacon: true,\n              placement: 'center',\n              target: 'body',\n            },\n            {\n              content: 'This y-axis applies to the traffic allocation which will appear as colored lines or areas',\n              disableBeacon: true,\n              placement: 'right',\n              target: '.highcharts-yaxis',\n            },\n            {\n              content: 'This section shows a summary of the state of the experiment at the current time',\n              disableBeacon: true,\n              placement: 'left',\n              target: '.manual',\n            },\n            {\n              content: 'Use these controls to modify the parameters of the demo to customize the comparison',\n              disableBeacon: true,\n              placement: 'bottom',\n              target: '.controls',\n            },\n          ] }\n        />\n      ) }\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}