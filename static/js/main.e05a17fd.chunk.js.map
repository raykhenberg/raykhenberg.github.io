{"version":3,"sources":["constants.js","fns.js","App.js","serviceWorker.js","index.js"],"names":["constants","ALLOCATION_TYPES","MANUAL","MIN_REGRET","MIN_TIME","CHART_LABELS","_CHART_LABELS","Object","defineProperty","roundDist","distribution","map","value","parseInt","fns","getConfidenceNumbers","jsonFile","variations","trafficAllocation","length","confidences","pValues","Array","fill","confidenceIntervals","Infinity","forEach","visitor","push","values","stats","statObject","pValue","confInterval","getCounts","visitorCounts","conversions","visitors","summaryObject","_","cloneDeep","variation","convert","getDistributions","sampleRate","arguments","undefined","initialPoints","distributions","index","visitorIndex","roundedDist","DistributionChart","getDistributionData","_this$props","_this","props","position","series","name","concat","data","slice","animation","duration","_this$props2","this","policy","chartRef","React","createRef","config","credits","enabled","plotOptions","line","marker","title","text","xAxis","labels","formatter","min","max","yAxis","react_default","a","createElement","className","ReactHighcharts_default","ref","Component","VariationCard","_this$props3","color","conversionCount","visitorCount","toFixed","StatSigCard","formatPValue","_this2","_this$props4","classNames","SummaryCard","getVisitorCount","_this3$props","_this3","counts","getConversionCount","_this3$props2","getPValue","_this3$props3","isBetterThanBaseline","baselineConversionRate","variationConversionRate","Number","isNaN","renderVariationCards","conversionTotal","visitorTotal","App_VariationCard","key","renderStatSigCards","App_StatSigCard","_this$props5","hideGraphs","border--left","flex","flex-align--center","flex--column","soft","style","minWidth","App","_this4","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","currentPosition","enabledCharts","interval","isRunning","multiplier","handleKeyDown","event","keyCode","preventDefault","stopCounting","startCounting","isChartEnabled","chartType","includes","setCurrentPosition","setState","maxVisitors","startInterval","setInterval","_previousState","clearInterval","toggleChart","target","charts","filter","type","previousState","toggleCharts","window","uniform","minRegretDistributions","minRegret","minTimeDistributions","minTime","uniformDistributions","minRegretCounts","minTimeCounts","uniformCounts","minRegretConfidences","minTimeConfidences","uniformConfidences","Math","minRegretVariations","minTimeVariations","uniformVariations","document","addEventListener","marks","0","label","20000","push-double--right","checked","id","onChange","htmlFor","onClick","dist_default","size","es","dots","flex--row","flex-justify--center","flex--space","App_DistributionChart","App_SummaryCard","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e05a17fd.chunk.js","sourcesContent":["export const MANUAL = 'MANUAL';\nexport const MIN_REGRET = 'MIN_REGRET'; // Accelerated Impact\nexport const MIN_TIME = 'MIN_TIME'; // Accelerated Learning\n\nexport const ALLOCATION_TYPES = {\n  MANUAL,\n  MIN_REGRET,\n  MIN_TIME,\n}\n\nexport const CHART_LABELS = {\n  [MANUAL]: 'Standard A/B',\n  [MIN_REGRET]: 'Min Regret (Accelerated Impact)',\n  [MIN_TIME]: 'Min Time (Accelerated Learning)',\n}\n\nexport default {\n  ALLOCATION_TYPES,\n  CHART_LABELS,\n  MANUAL,\n  MIN_REGRET,\n  MIN_TIME,\n};\n","import _ from 'lodash';\n\nconst roundDist = (distribution) => {\n  return distribution.map((value) => {\n    return parseInt(value * 10000) / 100;\n  });\n}\n\nexport const getConfidenceNumbers = (jsonFile) => {\n\n  const variations = jsonFile[0].trafficAllocation.length - 1;\n  const confidences = [\n    {\n      pValues: Array(variations).fill(1),\n      confidenceIntervals: Array(variations).fill([-Infinity, Infinity]),\n    }\n  ];\n\n  jsonFile.forEach((visitor) => {\n    confidences.push({\n      pValues: Object.values(visitor.stats).map((statObject) => statObject.pValue),\n      confidenceIntervals: Object.values(visitor.stats).map((statObject) => statObject.confInterval),\n    });\n  });\n\n  return confidences;\n};\n\nexport const getCounts = (jsonFile) => {\n  const variations = jsonFile[0].trafficAllocation.length;\n  const visitorCounts = [{\n    conversions: Array(variations).fill(0),\n    visitors: Array(variations).fill(0),\n  }];\n\n  jsonFile.forEach((visitor) => {\n    const summaryObject = _.cloneDeep(visitorCounts[visitorCounts.length - 1]); \n    summaryObject.visitors[visitor.variation] = summaryObject.visitors[visitor.variation] + 1;\n    if (visitor.convert) {\n      summaryObject.conversions[visitor.variation] = summaryObject.conversions[visitor.variation] + 1;\n    }\n    visitorCounts.push(summaryObject);\n  });\n\n  return visitorCounts;\n};\n\nexport const getDistributions = (jsonFile, sampleRate = 1) => {\n  const variations = Array(jsonFile[0].trafficAllocation.length).fill([]);\n  const initialPoints = roundDist(_.cloneDeep(jsonFile[0].trafficAllocation));\n  const distributions = [];\n  variations.forEach((variation, index) => {\n    distributions[index] = [initialPoints[index]];\n  });\n\n  jsonFile.forEach((visitor, visitorIndex) => {\n    const roundedDist = roundDist(visitor.trafficAllocation);\n    variations.forEach((variation, index) => {\n      if (!(visitorIndex % sampleRate)) {\n        distributions[index].push(roundedDist[index]);\n      }\n    });\n  });\n\n  return distributions;\n};\n\nexport default {\n  getConfidenceNumbers,\n  getCounts,\n  getDistributions,\n};\n","import _ from 'lodash';\nimport classNames from 'class-names';\nimport React, { Component } from 'react';\nimport './App.css';\nimport ReactHighcharts from 'react-highcharts';\nimport Slider from 'rc-slider';\nimport Icon from 'react-oui-icons';\n\nimport constants from './constants';\nimport fns from './fns';\n\nimport 'rc-slider/assets/index.css';\n\nclass DistributionChart extends Component {\n  getDistributionData = () => {\n    const {\n      distributions,\n      position,\n      sampleRate,\n      variations,\n    } = this.props;\n\n    const series = [];\n    \n    Array(variations).fill(1).forEach((value, index) => {\n      series.push({\n        name: !!index ? `Variation ${index}` : 'Original',\n        data: distributions[index].slice(0, parseInt(position / sampleRate)),\n        animation: {\n          duration: 0,\n        },\n      })\n    });\n\n    return _.cloneDeep(series);\n  }\n\n  render() {\n    const {\n      policy,\n      sampleRate,\n      distributions,\n    } = this.props;\n\n    const chartRef = React.createRef();\n\n    const config = {\n      credits: {\n        enabled: false,\n      },\n      plotOptions: {\n        line: {\n          marker: {\n            enabled: false,\n          },\n        },\n      },\n      series: this.getDistributionData(),\n      title: {\n        text: constants.CHART_LABELS[policy],\n      },\n      xAxis: {\n        labels: {\n          formatter: function() {\n            return this.value * sampleRate;\n          }\n        },\n        min: 0,\n        max: parseInt(distributions[0].length),\n      },\n      yAxis: {\n        title: {\n          text: 'Distribution',\n        },\n      },\n    }\n\n    return (\n      <div className=\"flex--1\">\n        <ReactHighcharts\n          config={ config }\n          ref={ chartRef }\n        />\n      </div>\n    );\n  }\n}\n\nclass VariationCard extends Component {\n  render() {\n    const {\n      color,\n      conversionCount,\n      title,\n      visitorCount,\n    } = this.props;\n\n    return (\n      <div\n        className=\"flex flex--column flex-align--center soft--sides\">\n        <h5>\n          { title }\n        </h5>\n        <p className=\"micro muted\">\n          Conversions\n        </p>\n        <h3 className={ `${color}` }>\n          { conversionCount }\n        </h3>\n        <p className=\"micro muted\">\n          Visitors\n        </p>\n        <h3 className={ `${color}` }>\n          { visitorCount }\n        </h3>\n        <p className=\"micro muted\">\n          Conversion Rate\n        </p>\n        <h3 className={ `${color}` }>\n          { `${visitorCount ? ((conversionCount / visitorCount) * 100).toFixed(2) : '0.00'}%` }\n        </h3>\n      </div>\n    )\n  }\n}\n\nclass StatSigCard extends Component {\n  formatPValue = () => {\n    const { pValue } = this.props;\n\n    return `${ ((1 - pValue) * 100).toFixed(2) }%`;\n  }\n\n  render() {\n    const {\n      color,\n      pValue,\n      title,\n    } = this.props;\n\n    return (\n      <div className=\"flex flex--column flex-align--center soft--sides width--50\">\n        <h5>\n          { title }\n        </h5>\n        <h3 className={ classNames({\n          [color]: pValue <= 0.10\n        }) }>\n          { this.formatPValue() }\n        </h3>\n      </div>\n    );\n  }\n}\n\nclass SummaryCard extends Component {\n  getVisitorCount = (variation) => {\n    const {\n      counts,\n      position,\n    } = this.props;\n\n    return counts[position].visitors[variation];\n  }\n\n  getConversionCount = (variation) => {\n    const {\n      counts,\n      position,\n    } = this.props;\n\n    return counts[position].conversions[variation];\n  }\n\n  getPValue = (variation) => {\n    const {\n      confidences,\n      position,\n    } = this.props;\n\n    return confidences[position].pValues[variation];\n  }\n\n  isBetterThanBaseline = (variation) => {\n    const baselineConversionRate = this.getConversionCount(0) / this.getVisitorCount(0);\n    const variationConversionRate = this.getConversionCount(variation) / this.getVisitorCount(variation);\n    return Number.isNaN(baselineConversionRate) || Number.isNaN(variationConversionRate) ? false : variationConversionRate > baselineConversionRate;\n  };\n\n  renderVariationCards = () => {\n    const { variations } = this.props;\n\n    let conversionTotal = 0;\n    let visitorTotal = 0;\n\n    return Array(variations + 1).fill(1).map((value, index) => {\n      if (index < variations) {\n        conversionTotal += this.getConversionCount(index);\n        visitorTotal += this.getVisitorCount(index);\n      }\n      if (!index) {\n        return (\n          <VariationCard\n            color=\"black\"\n            conversionCount={ this.getConversionCount(0) }\n            key={ index }\n            title=\"Original\"\n            visitorCount={ this.getVisitorCount(0) }\n          />\n        );\n      } else if (index === variations) {\n        return (\n          <VariationCard\n            color=\"black\"\n            conversionCount={ conversionTotal }\n            key={ index }\n            title=\"Total\"\n            visitorCount={ visitorTotal }\n          />\n        );\n      } else {\n        return (\n          <VariationCard \n            color={ this.getPValue(index - 1) <= 0.10 ? this.isBetterThanBaseline(index) ? 'green' : 'red' : 'black' }\n            conversionCount={ this.getConversionCount(index) }\n            key={ index }\n            title={ `Variation ${index}` }\n            visitorCount={ this.getVisitorCount(index) }\n          />\n        );\n      }\n    });\n  };\n\n  renderStatSigCards = () => {\n    const { variations } = this.props;\n\n    return Array(variations - 1).fill(1).map((value, index) => {\n      return (\n        <StatSigCard\n          color={ this.isBetterThanBaseline(index + 1) ? 'green' : 'red' }\n          key={ index }\n          pValue={ this.getPValue(index) }\n          title={ `Variation ${index + 1}` }\n        />\n      )\n    });\n  };\n\n  render() {\n    const { hideGraphs, policy, variations } = this.props;\n    return (\n      <div\n        className={ classNames({\n          \"border--left\": !hideGraphs,\n          \"flex\": true,\n          \"flex-align--center\": true,\n          \"flex--column\": true,\n          \"soft\": hideGraphs,\n        }) }\n        style={ {\n          minWidth: `${125 * variations}px`,\n        } }\n      >\n        { hideGraphs && (\n          <h1>{ constants.CHART_LABELS[policy] }</h1>\n        ) }\n        <div className=\"flex flex--row flex--space width--100\">\n          { this.renderVariationCards() }\n        </div>\n        <h4 className=\"flex\">\n          Statistical Significance:\n        </h4>\n        <div className=\"flex flex--row flex--space width--100\">\n          { this.renderStatSigCards() }\n        </div>\n      </div>\n    )\n  }\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.sampleRate = window.uniform.length / 500;\n    this.minRegretDistributions = fns.getDistributions(window.minRegret, this.sampleRate);\n    this.minTimeDistributions = fns.getDistributions(window.minTime, this.sampleRate);\n    this.uniformDistributions = fns.getDistributions(window.uniform, this.sampleRate);\n    this.minRegretCounts = fns.getCounts(window.minRegret);\n    this.minTimeCounts = fns.getCounts(window.minTime);\n    this.uniformCounts = fns.getCounts(window.uniform);\n    this.minRegretConfidences = fns.getConfidenceNumbers(window.minRegret);\n    this.minTimeConfidences = fns.getConfidenceNumbers(window.minTime);\n    this.uniformConfidences = fns.getConfidenceNumbers(window.uniform);\n    this.maxVisitors = Math.max(window.minRegret.length, window.minTime.length, window.uniform.length);\n    this.minRegretVariations = window.minRegret[0].trafficAllocation.length;\n    this.minTimeVariations = window.minTime[0].trafficAllocation.length;\n    this.uniformVariations = window.uniform[0].trafficAllocation.length;\n  }\n\n  state = {\n    currentPosition: 0,\n    enabledCharts: [constants.MANUAL],\n    hideGraphs: false,\n    interval: null,\n    isRunning: false,\n    multiplier: 100,\n  };\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = (event) => {\n    switch( event.keyCode ) {\n      case 32:\n        event.preventDefault();\n        if (this.state.isRunning) {\n          this.stopCounting();\n        } else {\n          this.startCounting();\n        }\n        break;\n      default: \n        break;\n    }\n  };\n\n  isChartEnabled = (chartType) => {\n    return this.state.enabledCharts.includes(chartType);\n  };\n\n  setCurrentPosition = (position) => {\n    this.setState(() => {\n      return {\n        currentPosition: position\n      }\n    });\n  };\n\n  startCounting = () => {\n    if (this.state.currentPosition >= this.maxVisitors) {\n      this.setState(() => {\n        return {\n          currentPosition: 0,\n        };\n      }, this.startInterval);\n    } else {\n      this.startInterval();\n    }\n    this.setState(() => {\n      return {\n        isRunning: true,\n      };\n    });\n  };\n\n  startInterval = () => {\n    this.setState(() => {\n      return {\n        interval: setInterval(() => {\n          if (this.state.currentPosition >= this.maxVisitors) {\n            this.stopCounting();\n            return;\n          }\n          this.setState((_previousState) => {\n            return {\n              currentPosition: _previousState.currentPosition + _previousState.multiplier >= this.maxVisitors ? this.maxVisitors : _previousState.currentPosition + _previousState.multiplier,\n            };\n          });\n        }, 100),\n      }\n    });\n  };\n\n  stopCounting = () => {\n    clearInterval(this.state.interval);\n    this.setState(() => {\n      return {\n        interval: null,\n        isRunning: false,\n      };\n    });\n  };\n\n  toggleChart = (event) => {\n    const chartType = event.target.value;\n\n    if (this.state.enabledCharts.includes(chartType)) {\n      const charts = _.cloneDeep(this.state.enabledCharts);\n      this.setState(() => {\n        return {\n          enabledCharts: charts.filter(type => type !== chartType),\n        };\n      });\n    } else {\n      this.setState((previousState) => {\n        const charts = _.cloneDeep(previousState.enabledCharts)\n        charts.push(chartType);\n        return {\n          enabledCharts: charts,\n        };\n      });\n    }\n  };\n\n  toggleCharts = (event) => {\n    this.setState((previousState) => {\n      return {\n        hideGraphs: !previousState.hideGraphs,\n      }\n    })\n  };\n\n  render() {\n    const marks = {\n      0: {\n        style: {\n          color: 'grey',\n        },\n        label: 'Start',\n      },\n      20000: {\n        style: {\n          color: 'grey',\n        },\n        label: 'End'\n      }\n    }\n\n    if (this.isChartEnabled(constants.MANUAL)) {\n      marks['7900'] = {\n        style: {\n          color: 'red',\n        },\n        label: 'A/B Significant (Loser)',\n      };\n    }\n\n    if (this.isChartEnabled(constants.MIN_TIME)) {\n      marks['13200'] = {\n        style: {\n          color: 'green',\n        } ,\n        label: 'Min Time Significant (Winner)',\n      };\n\n      marks['4650'] = {\n        style: {\n          color: 'red',\n        },\n        label: 'Min Time Significant (Loser)',\n      };\n    };\n\n    return (\n      <div className=\"soft--sides\">\n        <div className=\"push--ends flex flex--row flex-align--center width--100\">\n          <div className={ classNames({\n            'push-double--right': true,\n            'flex': true,\n            'flex--column': true\n          }) }>\n            <div className=\"flex--row micro\">\n              <input\n                checked={ this.isChartEnabled(constants.MANUAL) }\n                id={ constants.MANUAL }\n                onChange={ this.toggleChart }\n                type=\"checkbox\"\n                value={ constants.MANUAL }\n              />\n              <label htmlFor={ constants.MANUAL }>\n                A/B\n              </label>\n            </div>\n            <div className=\"flex--row micro\">\n              <input\n                checked={ this.isChartEnabled(constants.MIN_REGRET) }\n                id={ constants.MIN_REGRET }\n                onChange={ this.toggleChart }\n                type=\"checkbox\"\n                value={ constants.MIN_REGRET }\n              />\n              <label htmlFor={ constants.MIN_REGRET }>\n                Min Regret\n              </label>\n            </div>\n            <div className=\"flex--row micro\">\n              <input\n                checked={ this.isChartEnabled(constants.MIN_TIME) }\n                id={ constants.MIN_TIME }\n                onChange={ this.toggleChart }\n                type=\"checkbox\"\n                value={ constants.MIN_TIME }\n              />\n              <label htmlFor={ constants.MIN_TIME }>\n                Min Time\n              </label>\n            </div>\n            <div className=\"flex--row micro\">\n              <input\n                checked={ this.state.hideGraphs }\n                id=\"charts\"\n                onChange={ this.toggleCharts }\n                type=\"checkbox\"\n              />\n              <label htmlFor=\"charts\">\n                Hide Graphs\n              </label>\n            </div>\n          </div>\n          <div className=\"push-double--right\">\n            { !this.state.interval && (\n              <button\n                className=\"no-padding\"\n                onClick={ this.startCounting }>\n                <div className=\"flex square--50 flex-align--center flex-justify--center\">\n                  { this.state.currentPosition !== this.maxVisitors && (\n                    <Icon\n                      name=\"play\"\n                      size=\"large\"\n                    />\n                  ) }\n                  { this.state.currentPosition === this.maxVisitors && (\n                    <Icon\n                      name=\"refresh\"\n                      size=\"large\"\n                    />\n                  ) }\n                </div>\n              </button>\n            ) }\n            { this.state.interval && (\n              <button\n                className=\"no-padding\"\n                onClick={ this.stopCounting }>\n                <div className=\"flex square--50 flex-align--center flex-justify--center\">\n                  <Icon\n                    name=\"pause\"\n                    size=\"large\"\n                  />\n                </div>\n              </button>\n            ) }\n          </div>\n          <div className=\"flex flex--1 flex-align--center push-double--right\">\n            <Slider\n              dots={ false }\n              min={ 0 }\n              marks={ marks }\n              max={ this.maxVisitors }\n              onChange={ this.setCurrentPosition }\n              value={ this.state.currentPosition }\n            />\n          </div>\n        </div>\n        <div className={ classNames({\n          'flex': this.state.hideGraphs,\n          'flex--row': this.state.hideGraphs,\n          'flex-justify--center': this.state.hideGraphs,\n          'flex--space': this.state.hideGraphs,\n        }) }>\n          { this.isChartEnabled(constants.MANUAL) && (\n            <div className=\"flex flex--row border push--ends\">\n              { !this.state.hideGraphs && (\n                <DistributionChart\n                  distributions={ this.uniformDistributions }\n                  policy={ constants.MANUAL }\n                  position={ this.state.currentPosition }\n                  sampleRate={ this.sampleRate }\n                  variations={ this.uniformVariations }\n                />\n              ) }\n              <SummaryCard\n                confidences={ this.uniformConfidences }\n                counts={ this.uniformCounts }\n                hideGraphs={ this.state.hideGraphs }\n                policy={ constants.MANUAL }\n                position={ this.state.currentPosition }\n                variations={ this.uniformVariations }\n              />\n            </div>\n          ) }\n          { this.isChartEnabled(constants.MIN_REGRET) && (\n            <div className=\"flex flex--row border push--ends\">\n              { !this.state.hideGraphs && (\n                <DistributionChart\n                  distributions={ this.minRegretDistributions }\n                  policy={ constants.MIN_REGRET }\n                  position={ this.state.currentPosition }\n                  sampleRate={ this.sampleRate }\n                  variations={ this.minRegretVariations }\n                />\n              ) }\n              <SummaryCard\n                confidences={ this.minRegretConfidences }\n                counts={ this.minRegretCounts }\n                hideGraphs={ this.state.hideGraphs }\n                policy={ constants.MIN_REGRET }\n                position={ this.state.currentPosition }\n                variations={ this.minRegretVariations }\n              />\n            </div>\n          ) }\n          { this.isChartEnabled(constants.MIN_TIME) && (\n            <div className=\"flex flex--row border push--ends\">\n              { !this.state.hideGraphs && (\n                <DistributionChart\n                  distributions={ this.minTimeDistributions }\n                  policy={ constants.MIN_TIME }\n                  position={ this.state.currentPosition }\n                  sampleRate={ this.sampleRate }\n                  variations={ this.minTimeVariations }\n                />\n              ) }\n              <SummaryCard\n                confidences={ this.minTimeConfidences }\n                counts={ this.minTimeCounts }\n                hideGraphs={ this.state.hideGraphs }\n                policy={ constants.MIN_TIME }\n                position={ this.state.currentPosition }\n                variations={ this.minTimeVariations }\n              />\n            </div>\n          ) }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}